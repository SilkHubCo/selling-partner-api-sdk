/**
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon\'s fulfillment network.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * Reasons why a given ASIN is not recommended for shipment to Amazon\'s fulfillment network.
 * @export
 * @interface ASINInboundGuidance
 */
export interface ASINInboundGuidance {
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof ASINInboundGuidance
     */
    ASIN: string;
    /**
     *
     * @type {InboundGuidance}
     * @memberof ASINInboundGuidance
     */
    InboundGuidance: InboundGuidance | 'InboundNotRecommended' | 'InboundOK';
    /**
     * A list of inbound guidance reason information.
     * @type {Array<GuidanceReason>}
     * @memberof ASINInboundGuidance
     */
    GuidanceReasonList?: Array<(GuidanceReason | 'SlowMovingASIN' | 'NoApplicableGuidance')>;
}
/**
 * Item preparation instructions to help with item sourcing decisions.
 * @export
 * @interface ASINPrepInstructions
 */
export interface ASINPrepInstructions {
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof ASINPrepInstructions
     */
    ASIN?: string;
    /**
     *
     * @type {BarcodeInstruction}
     * @memberof ASINPrepInstructions
     */
    BarcodeInstruction?: BarcodeInstruction | 'RequiresFNSKULabel' | 'CanUseOriginalBarcode' | 'MustProvideSellerSKU';
    /**
     *
     * @type {PrepGuidance}
     * @memberof ASINPrepInstructions
     */
    PrepGuidance?: PrepGuidance | 'ConsultHelpDocuments' | 'NoAdditionalPrepRequired' | 'SeePrepInstructionsList';
    /**
     * A list of preparation instructions to help with item sourcing decisions.
     * @type {Array<PrepInstruction>}
     * @memberof ASINPrepInstructions
     */
    PrepInstructionList?: Array<(PrepInstruction | 'Polybagging' | 'BubbleWrapping' | 'Taping' | 'BlackShrinkWrapping' | 'Labeling' | 'HangGarment' | 'SetCreation' | 'Boxing' | 'RemoveFromHanger' | 'Debundle' | 'SuffocationStickering' | 'CapSealing' | 'SetStickering' | 'BlankStickering' | 'ShipsInProductPackaging' | 'NoPrep')>;
}
/**
 * Specific details to identify a place.
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * Name of the individual or business.
     * @type {string}
     * @memberof Address
     */
    Name: string;
    /**
     * The street address information.
     * @type {string}
     * @memberof Address
     */
    AddressLine1: string;
    /**
     * Additional street address information, if required.
     * @type {string}
     * @memberof Address
     */
    AddressLine2?: string;
    /**
     * The district or county.
     * @type {string}
     * @memberof Address
     */
    DistrictOrCounty?: string;
    /**
     * The city.
     * @type {string}
     * @memberof Address
     */
    City: string;
    /**
     * The state or province code.  If state or province codes are used in your marketplace, it is recommended that you include one with your request. This helps Amazon to select the most appropriate Amazon fulfillment center for your inbound shipment plan.
     * @type {string}
     * @memberof Address
     */
    StateOrProvinceCode: string;
    /**
     * The country code in two-character ISO 3166-1 alpha-2 format.
     * @type {string}
     * @memberof Address
     */
    CountryCode: string;
    /**
     * The postal code.  If postal codes are used in your marketplace, we recommended that you include one with your request. This helps Amazon select the most appropriate Amazon fulfillment center for the inbound shipment plan.
     * @type {string}
     * @memberof Address
     */
    PostalCode: string;
}
/**
 * The fees for Amazon to prep goods for shipment.
 * @export
 * @interface AmazonPrepFeesDetails
 */
export interface AmazonPrepFeesDetails {
    /**
     *
     * @type {PrepInstruction}
     * @memberof AmazonPrepFeesDetails
     */
    PrepInstruction?: PrepInstruction | 'Polybagging' | 'BubbleWrapping' | 'Taping' | 'BlackShrinkWrapping' | 'Labeling' | 'HangGarment' | 'SetCreation' | 'Boxing' | 'RemoveFromHanger' | 'Debundle' | 'SuffocationStickering' | 'CapSealing' | 'SetStickering' | 'BlankStickering' | 'ShipsInProductPackaging' | 'NoPrep';
    /**
     *
     * @type {Amount}
     * @memberof AmazonPrepFeesDetails
     */
    FeePerUnit?: Amount;
}
/**
 * The monetary value.
 * @export
 * @interface Amount
 */
export interface Amount {
    /**
     *
     * @type {CurrencyCode}
     * @memberof Amount
     */
    CurrencyCode: CurrencyCode | 'USD' | 'GBP';
    /**
     * Number format that supports decimal.
     * @type {number}
     * @memberof Amount
     */
    Value: number;
}
/**
 * Labeling requirements for the item. For more information about FBA labeling requirements, see the Seller Central Help for your marketplace.
 * @export
 * @enum {string}
 */
export declare enum BarcodeInstruction {
    RequiresFnskuLabel = "RequiresFNSKULabel",
    CanUseOriginalBarcode = "CanUseOriginalBarcode",
    MustProvideSellerSku = "MustProvideSellerSKU"
}
/**
 * Download URL for the bill of lading.
 * @export
 * @interface BillOfLadingDownloadURL
 */
export interface BillOfLadingDownloadURL {
    /**
     * URL to download the bill of lading for the package. Note: The URL will only be valid for 15 seconds
     * @type {string}
     * @memberof BillOfLadingDownloadURL
     */
    DownloadURL?: string;
}
/**
 * The manual processing fee per unit and total fee for a shipment.
 * @export
 * @interface BoxContentsFeeDetails
 */
export interface BoxContentsFeeDetails {
    /**
     * The item quantity.
     * @type {number}
     * @memberof BoxContentsFeeDetails
     */
    TotalUnits?: number;
    /**
     *
     * @type {Amount}
     * @memberof BoxContentsFeeDetails
     */
    FeePerUnit?: Amount;
    /**
     *
     * @type {Amount}
     * @memberof BoxContentsFeeDetails
     */
    TotalFee?: Amount;
}
/**
 * Where the seller provided box contents information for a shipment.
 * @export
 * @enum {string}
 */
export declare enum BoxContentsSource {
    None = "NONE",
    Feed = "FEED",
    _2DBarcode = "2D_BARCODE",
    Interactive = "INTERACTIVE"
}
/**
 * Common container for transport result
 * @export
 * @interface CommonTransportResult
 */
export interface CommonTransportResult {
    /**
     *
     * @type {TransportResult}
     * @memberof CommonTransportResult
     */
    TransportResult?: TransportResult;
}
/**
 * The condition of the item.
 * @export
 * @enum {string}
 */
export declare enum Condition {
    NewItem = "NewItem",
    NewWithWarranty = "NewWithWarranty",
    NewOem = "NewOEM",
    NewOpenBox = "NewOpenBox",
    UsedLikeNew = "UsedLikeNew",
    UsedVeryGood = "UsedVeryGood",
    UsedGood = "UsedGood",
    UsedAcceptable = "UsedAcceptable",
    UsedPoor = "UsedPoor",
    UsedRefurbished = "UsedRefurbished",
    CollectibleLikeNew = "CollectibleLikeNew",
    CollectibleVeryGood = "CollectibleVeryGood",
    CollectibleGood = "CollectibleGood",
    CollectibleAcceptable = "CollectibleAcceptable",
    CollectiblePoor = "CollectiblePoor",
    RefurbishedWithWarranty = "RefurbishedWithWarranty",
    Refurbished = "Refurbished",
    Club = "Club"
}
/**
 * The response schema for the confirmPreorder operation.
 * @export
 * @interface ConfirmPreorderResponse
 */
export interface ConfirmPreorderResponse {
    /**
     *
     * @type {ConfirmPreorderResult}
     * @memberof ConfirmPreorderResponse
     */
    payload?: ConfirmPreorderResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof ConfirmPreorderResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for confirm preorder operation
 * @export
 * @interface ConfirmPreorderResult
 */
export interface ConfirmPreorderResult {
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof ConfirmPreorderResult
     */
    ConfirmedNeedByDate?: string;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof ConfirmPreorderResult
     */
    ConfirmedFulfillableDate?: string;
}
/**
 * The response schema for the confirmTransport operation.
 * @export
 * @interface ConfirmTransportResponse
 */
export interface ConfirmTransportResponse {
    /**
     *
     * @type {CommonTransportResult}
     * @memberof ConfirmTransportResponse
     */
    payload?: CommonTransportResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof ConfirmTransportResponse
     */
    errors?: Array<Error>;
}
/**
 * Contact information for the person in the seller\'s organization who is responsible for a Less Than Truckload/Full Truckload (LTL/FTL) shipment.
 * @export
 * @interface Contact
 */
export interface Contact {
    /**
     * The name of the contact person.
     * @type {string}
     * @memberof Contact
     */
    Name: string;
    /**
     * The phone number of the contact person.
     * @type {string}
     * @memberof Contact
     */
    Phone: string;
    /**
     * The email address of the contact person.
     * @type {string}
     * @memberof Contact
     */
    Email: string;
    /**
     * The fax number of the contact person.
     * @type {string}
     * @memberof Contact
     */
    Fax?: string;
}
/**
 * The request schema for the createInboundShipmentPlan operation.
 * @export
 * @interface CreateInboundShipmentPlanRequest
 */
export interface CreateInboundShipmentPlanRequest {
    /**
     *
     * @type {Address}
     * @memberof CreateInboundShipmentPlanRequest
     */
    ShipFromAddress: Address;
    /**
     *
     * @type {LabelPrepPreference}
     * @memberof CreateInboundShipmentPlanRequest
     */
    LabelPrepPreference: LabelPrepPreference | 'SELLER_LABEL' | 'AMAZON_LABEL_ONLY' | 'AMAZON_LABEL_PREFERRED';
    /**
     * The two-character country code for the country where the inbound shipment is to be sent.  Note: Not required. Specifying both ShipToCountryCode and ShipToCountrySubdivisionCode returns an error.   Values:   ShipToCountryCode values for North America:  * CA – Canada  * MX - Mexico  * US - United States  ShipToCountryCode values for MCI sellers in Europe:  * DE – Germany  * ES – Spain  * FR – France  * GB – United Kingdom  * IT – Italy  Default: The country code for the seller\'s home marketplace.
     * @type {string}
     * @memberof CreateInboundShipmentPlanRequest
     */
    ShipToCountryCode?: string;
    /**
     * The two-character country code, followed by a dash and then up to three characters that represent the subdivision of the country where the inbound shipment is to be sent. For example, \"IN-MH\". In full ISO 3166-2 format.  Note: Not required. Specifying both ShipToCountryCode and ShipToCountrySubdivisionCode returns an error.
     * @type {string}
     * @memberof CreateInboundShipmentPlanRequest
     */
    ShipToCountrySubdivisionCode?: string;
    /**
     * List of inbound shipment plan requests
     * @type {Array<InboundShipmentPlanRequestItem>}
     * @memberof CreateInboundShipmentPlanRequest
     */
    InboundShipmentPlanRequestItems: Array<InboundShipmentPlanRequestItem>;
}
/**
 * The response schema for the createInboundShipmentPlan operation.
 * @export
 * @interface CreateInboundShipmentPlanResponse
 */
export interface CreateInboundShipmentPlanResponse {
    /**
     *
     * @type {CreateInboundShipmentPlanResult}
     * @memberof CreateInboundShipmentPlanResponse
     */
    payload?: CreateInboundShipmentPlanResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof CreateInboundShipmentPlanResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the create inbound shipment operation
 * @export
 * @interface CreateInboundShipmentPlanResult
 */
export interface CreateInboundShipmentPlanResult {
    /**
     * A list of inbound shipment plan information
     * @type {Array<InboundShipmentPlan>}
     * @memberof CreateInboundShipmentPlanResult
     */
    InboundShipmentPlans?: Array<InboundShipmentPlan>;
}
/**
 * The currency code.
 * @export
 * @enum {string}
 */
export declare enum CurrencyCode {
    Usd = "USD",
    Gbp = "GBP"
}
/**
 * The dimension values and unit of measurement.
 * @export
 * @interface Dimensions
 */
export interface Dimensions {
    /**
     * Number format that supports decimal.
     * @type {number}
     * @memberof Dimensions
     */
    Length: number;
    /**
     * Number format that supports decimal.
     * @type {number}
     * @memberof Dimensions
     */
    Width: number;
    /**
     * Number format that supports decimal.
     * @type {number}
     * @memberof Dimensions
     */
    Height: number;
    /**
     *
     * @type {UnitOfMeasurement}
     * @memberof Dimensions
     */
    Unit: UnitOfMeasurement | 'inches' | 'centimeters';
}
/**
 * The reason that the ASIN is invalid.
 * @export
 * @enum {string}
 */
export declare enum ErrorReason {
    DoesNotExist = "DoesNotExist",
    InvalidAsin = "InvalidASIN"
}
/**
 * The response schema for the estimateTransport operation.
 * @export
 * @interface EstimateTransportResponse
 */
export interface EstimateTransportResponse {
    /**
     *
     * @type {CommonTransportResult}
     * @memberof EstimateTransportResponse
     */
    payload?: CommonTransportResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof EstimateTransportResponse
     */
    errors?: Array<Error>;
}
/**
 * The response schema for the getBillOfLading operation.
 * @export
 * @interface GetBillOfLadingResponse
 */
export interface GetBillOfLadingResponse {
    /**
     *
     * @type {BillOfLadingDownloadURL}
     * @memberof GetBillOfLadingResponse
     */
    payload?: BillOfLadingDownloadURL;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetBillOfLadingResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the get inbound guidance operation
 * @export
 * @interface GetInboundGuidanceResult
 */
export interface GetInboundGuidanceResult {
    /**
     * A list of SKU inbound guidance information.
     * @type {Array<SKUInboundGuidance>}
     * @memberof GetInboundGuidanceResult
     */
    SKUInboundGuidanceList?: Array<SKUInboundGuidance>;
    /**
     * A list of invalid SKU values and the reason they are invalid.
     * @type {Array<InvalidSKU>}
     * @memberof GetInboundGuidanceResult
     */
    InvalidSKUList?: Array<InvalidSKU>;
    /**
     * A list of ASINs and their associated inbound guidance.
     * @type {Array<ASINInboundGuidance>}
     * @memberof GetInboundGuidanceResult
     */
    ASINInboundGuidanceList?: Array<ASINInboundGuidance>;
    /**
     * A list of invalid ASIN values and the reasons they are invalid.
     * @type {Array<InvalidASIN>}
     * @memberof GetInboundGuidanceResult
     */
    InvalidASINList?: Array<InvalidASIN>;
}
/**
 * The response schema for the getLabels operation.
 * @export
 * @interface GetLabelsResponse
 */
export interface GetLabelsResponse {
    /**
     *
     * @type {LabelDownloadURL}
     * @memberof GetLabelsResponse
     */
    payload?: LabelDownloadURL;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetLabelsResponse
     */
    errors?: Array<Error>;
}
/**
 * The response schema for the getPreorderInfo operation.
 * @export
 * @interface GetPreorderInfoResponse
 */
export interface GetPreorderInfoResponse {
    /**
     *
     * @type {GetPreorderInfoResult}
     * @memberof GetPreorderInfoResponse
     */
    payload?: GetPreorderInfoResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetPreorderInfoResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the get preorder info operation
 * @export
 * @interface GetPreorderInfoResult
 */
export interface GetPreorderInfoResult {
    /**
     * Indicates whether the shipment contains items that have been enabled for pre-order. For more information about enabling items for pre-order, see the Seller Central Help.
     * @type {boolean}
     * @memberof GetPreorderInfoResult
     */
    ShipmentContainsPreorderableItems?: boolean;
    /**
     * Indicates whether this shipment has been confirmed for pre-order.
     * @type {boolean}
     * @memberof GetPreorderInfoResult
     */
    ShipmentConfirmedForPreorder?: boolean;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof GetPreorderInfoResult
     */
    NeedByDate?: string;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof GetPreorderInfoResult
     */
    ConfirmedFulfillableDate?: string;
}
/**
 * The response schema for the getPrepInstructions operation.
 * @export
 * @interface GetPrepInstructionsResponse
 */
export interface GetPrepInstructionsResponse {
    /**
     *
     * @type {GetPrepInstructionsResult}
     * @memberof GetPrepInstructionsResponse
     */
    payload?: GetPrepInstructionsResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetPrepInstructionsResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the get prep instructions operation
 * @export
 * @interface GetPrepInstructionsResult
 */
export interface GetPrepInstructionsResult {
    /**
     * A list of SKU labeling requirements and item preparation instructions.
     * @type {Array<SKUPrepInstructions>}
     * @memberof GetPrepInstructionsResult
     */
    SKUPrepInstructionsList?: Array<SKUPrepInstructions>;
    /**
     * A list of invalid SKU values and the reason they are invalid.
     * @type {Array<InvalidSKU>}
     * @memberof GetPrepInstructionsResult
     */
    InvalidSKUList?: Array<InvalidSKU>;
    /**
     * A list of item preparation instructions.
     * @type {Array<ASINPrepInstructions>}
     * @memberof GetPrepInstructionsResult
     */
    ASINPrepInstructionsList?: Array<ASINPrepInstructions>;
    /**
     * A list of invalid ASIN values and the reasons they are invalid.
     * @type {Array<InvalidASIN>}
     * @memberof GetPrepInstructionsResult
     */
    InvalidASINList?: Array<InvalidASIN>;
}
/**
 * The response schema for the getShipmentItems operation.
 * @export
 * @interface GetShipmentItemsResponse
 */
export interface GetShipmentItemsResponse {
    /**
     *
     * @type {GetShipmentItemsResult}
     * @memberof GetShipmentItemsResponse
     */
    payload?: GetShipmentItemsResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetShipmentItemsResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the get shipment items operation
 * @export
 * @interface GetShipmentItemsResult
 */
export interface GetShipmentItemsResult {
    /**
     * A list of inbound shipment item information.
     * @type {Array<InboundShipmentItem>}
     * @memberof GetShipmentItemsResult
     */
    ItemData?: Array<InboundShipmentItem>;
    /**
     * When present and not empty, pass this string token in the next request to return the next response page.
     * @type {string}
     * @memberof GetShipmentItemsResult
     */
    NextToken?: string;
}
/**
 * The response schema for the getShipments operation.
 * @export
 * @interface GetShipmentsResponse
 */
export interface GetShipmentsResponse {
    /**
     *
     * @type {GetShipmentsResult}
     * @memberof GetShipmentsResponse
     */
    payload?: GetShipmentsResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetShipmentsResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the get shipments operation
 * @export
 * @interface GetShipmentsResult
 */
export interface GetShipmentsResult {
    /**
     * A list of inbound shipment information.
     * @type {Array<InboundShipmentInfo>}
     * @memberof GetShipmentsResult
     */
    ShipmentData?: Array<InboundShipmentInfo>;
    /**
     * When present and not empty, pass this string token in the next request to return the next response page.
     * @type {string}
     * @memberof GetShipmentsResult
     */
    NextToken?: string;
}
/**
 * The response schema for the getTransportDetails operation.
 * @export
 * @interface GetTransportDetailsResponse
 */
export interface GetTransportDetailsResponse {
    /**
     *
     * @type {GetTransportDetailsResult}
     * @memberof GetTransportDetailsResponse
     */
    payload?: GetTransportDetailsResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetTransportDetailsResponse
     */
    errors?: Array<Error>;
}
/**
 * Result for the get transport details operation
 * @export
 * @interface GetTransportDetailsResult
 */
export interface GetTransportDetailsResult {
    /**
     *
     * @type {TransportContent}
     * @memberof GetTransportDetailsResult
     */
    TransportContent?: TransportContent;
}
/**
 * A reason for the current inbound guidance for an item.
 * @export
 * @enum {string}
 */
export declare enum GuidanceReason {
    SlowMovingAsin = "SlowMovingASIN",
    NoApplicableGuidance = "NoApplicableGuidance"
}
/**
 * Specific inbound guidance for an item.
 * @export
 * @enum {string}
 */
export declare enum InboundGuidance {
    InboundNotRecommended = "InboundNotRecommended",
    InboundOk = "InboundOK"
}
/**
 * Inbound shipment information used to create and update inbound shipments.
 * @export
 * @interface InboundShipmentHeader
 */
export interface InboundShipmentHeader {
    /**
     * The name for the shipment. Use a naming convention that helps distinguish between shipments over time, such as the date the shipment was created.
     * @type {string}
     * @memberof InboundShipmentHeader
     */
    ShipmentName: string;
    /**
     *
     * @type {Address}
     * @memberof InboundShipmentHeader
     */
    ShipFromAddress: Address;
    /**
     * The identifier for the fulfillment center to which the shipment will be shipped. Get this value from the InboundShipmentPlan object in the response returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof InboundShipmentHeader
     */
    DestinationFulfillmentCenterId: string;
    /**
     * Indicates whether or not an inbound shipment contains case-packed boxes. Note: A shipment must contain either all case-packed boxes or all individually packed boxes.  Possible values:  true - All boxes in the shipment must be case packed.  false - All boxes in the shipment must be individually packed.  Note: If AreCasesRequired = true for an inbound shipment, then the value of QuantityInCase must be greater than zero for every item in the shipment. Otherwise the service returns an error.
     * @type {boolean}
     * @memberof InboundShipmentHeader
     */
    AreCasesRequired?: boolean;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof InboundShipmentHeader
     */
    ShipmentStatus: ShipmentStatus | 'WORKING' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN';
    /**
     *
     * @type {LabelPrepPreference}
     * @memberof InboundShipmentHeader
     */
    LabelPrepPreference: LabelPrepPreference | 'SELLER_LABEL' | 'AMAZON_LABEL_ONLY' | 'AMAZON_LABEL_PREFERRED';
    /**
     *
     * @type {IntendedBoxContentsSource}
     * @memberof InboundShipmentHeader
     */
    IntendedBoxContentsSource?: IntendedBoxContentsSource | 'NONE' | 'FEED' | '2D_BARCODE';
}
/**
 * Information about the seller\'s inbound shipments. Returned by the listInboundShipments operation.
 * @export
 * @interface InboundShipmentInfo
 */
export interface InboundShipmentInfo {
    /**
     * The shipment identifier submitted in the request.
     * @type {string}
     * @memberof InboundShipmentInfo
     */
    ShipmentId?: string;
    /**
     * The name for the inbound shipment.
     * @type {string}
     * @memberof InboundShipmentInfo
     */
    ShipmentName?: string;
    /**
     *
     * @type {Address}
     * @memberof InboundShipmentInfo
     */
    ShipFromAddress: Address;
    /**
     * An Amazon fulfillment center identifier created by Amazon.
     * @type {string}
     * @memberof InboundShipmentInfo
     */
    DestinationFulfillmentCenterId?: string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof InboundShipmentInfo
     */
    ShipmentStatus?: ShipmentStatus | 'WORKING' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN';
    /**
     *
     * @type {LabelPrepType}
     * @memberof InboundShipmentInfo
     */
    LabelPrepType?: LabelPrepType | 'NO_LABEL' | 'SELLER_LABEL' | 'AMAZON_LABEL';
    /**
     * Indicates whether or not an inbound shipment contains case-packed boxes. When AreCasesRequired = true for an inbound shipment, all items in the inbound shipment must be case packed.
     * @type {boolean}
     * @memberof InboundShipmentInfo
     */
    AreCasesRequired: boolean;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof InboundShipmentInfo
     */
    ConfirmedNeedByDate?: string;
    /**
     *
     * @type {BoxContentsSource}
     * @memberof InboundShipmentInfo
     */
    BoxContentsSource?: BoxContentsSource | 'NONE' | 'FEED' | '2D_BARCODE' | 'INTERACTIVE';
    /**
     *
     * @type {BoxContentsFeeDetails}
     * @memberof InboundShipmentInfo
     */
    EstimatedBoxContentsFee?: BoxContentsFeeDetails;
}
/**
 * Item information for an inbound shipment. Submitted with a call to the createInboundShipment or updateInboundShipment operation.
 * @export
 * @interface InboundShipmentItem
 */
export interface InboundShipmentItem {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof InboundShipmentItem
     */
    ShipmentId?: string;
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof InboundShipmentItem
     */
    SellerSKU: string;
    /**
     * Amazon\'s fulfillment network SKU of the item.
     * @type {string}
     * @memberof InboundShipmentItem
     */
    FulfillmentNetworkSKU?: string;
    /**
     * The item quantity.
     * @type {number}
     * @memberof InboundShipmentItem
     */
    QuantityShipped: number;
    /**
     * The item quantity.
     * @type {number}
     * @memberof InboundShipmentItem
     */
    QuantityReceived?: number;
    /**
     * The item quantity.
     * @type {number}
     * @memberof InboundShipmentItem
     */
    QuantityInCase?: number;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof InboundShipmentItem
     */
    ReleaseDate?: string;
    /**
     * A list of preparation instructions and who is responsible for that preparation.
     * @type {Array<PrepDetails>}
     * @memberof InboundShipmentItem
     */
    PrepDetailsList?: Array<PrepDetails>;
}
/**
 * Inbound shipment information used to create an inbound shipment. Returned by the createInboundShipmentPlan operation.
 * @export
 * @interface InboundShipmentPlan
 */
export interface InboundShipmentPlan {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof InboundShipmentPlan
     */
    ShipmentId: string;
    /**
     * An Amazon fulfillment center identifier created by Amazon.
     * @type {string}
     * @memberof InboundShipmentPlan
     */
    DestinationFulfillmentCenterId: string;
    /**
     *
     * @type {Address}
     * @memberof InboundShipmentPlan
     */
    ShipToAddress: Address;
    /**
     *
     * @type {LabelPrepType}
     * @memberof InboundShipmentPlan
     */
    LabelPrepType: LabelPrepType | 'NO_LABEL' | 'SELLER_LABEL' | 'AMAZON_LABEL';
    /**
     * A list of inbound shipment plan item information.
     * @type {Array<InboundShipmentPlanItem>}
     * @memberof InboundShipmentPlan
     */
    Items: Array<InboundShipmentPlanItem>;
    /**
     *
     * @type {BoxContentsFeeDetails}
     * @memberof InboundShipmentPlan
     */
    EstimatedBoxContentsFee?: BoxContentsFeeDetails;
}
/**
 * Item information used to create an inbound shipment. Returned by the createInboundShipmentPlan operation.
 * @export
 * @interface InboundShipmentPlanItem
 */
export interface InboundShipmentPlanItem {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof InboundShipmentPlanItem
     */
    SellerSKU: string;
    /**
     * Amazon\'s fulfillment network SKU of the item.
     * @type {string}
     * @memberof InboundShipmentPlanItem
     */
    FulfillmentNetworkSKU: string;
    /**
     * The item quantity.
     * @type {number}
     * @memberof InboundShipmentPlanItem
     */
    Quantity: number;
    /**
     * A list of preparation instructions and who is responsible for that preparation.
     * @type {Array<PrepDetails>}
     * @memberof InboundShipmentPlanItem
     */
    PrepDetailsList?: Array<PrepDetails>;
}
/**
 * Item information for creating an inbound shipment plan. Submitted with a call to the createInboundShipmentPlan operation.
 * @export
 * @interface InboundShipmentPlanRequestItem
 */
export interface InboundShipmentPlanRequestItem {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof InboundShipmentPlanRequestItem
     */
    SellerSKU: string;
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof InboundShipmentPlanRequestItem
     */
    ASIN: string;
    /**
     *
     * @type {Condition}
     * @memberof InboundShipmentPlanRequestItem
     */
    Condition: Condition | 'NewItem' | 'NewWithWarranty' | 'NewOEM' | 'NewOpenBox' | 'UsedLikeNew' | 'UsedVeryGood' | 'UsedGood' | 'UsedAcceptable' | 'UsedPoor' | 'UsedRefurbished' | 'CollectibleLikeNew' | 'CollectibleVeryGood' | 'CollectibleGood' | 'CollectibleAcceptable' | 'CollectiblePoor' | 'RefurbishedWithWarranty' | 'Refurbished' | 'Club';
    /**
     * The item quantity.
     * @type {number}
     * @memberof InboundShipmentPlanRequestItem
     */
    Quantity: number;
    /**
     * The item quantity.
     * @type {number}
     * @memberof InboundShipmentPlanRequestItem
     */
    QuantityInCase?: number;
    /**
     * A list of preparation instructions and who is responsible for that preparation.
     * @type {Array<PrepDetails>}
     * @memberof InboundShipmentPlanRequestItem
     */
    PrepDetailsList?: Array<PrepDetails>;
}
/**
 * The request schema for an inbound shipment.
 * @export
 * @interface InboundShipmentRequest
 */
export interface InboundShipmentRequest {
    /**
     *
     * @type {InboundShipmentHeader}
     * @memberof InboundShipmentRequest
     */
    InboundShipmentHeader: InboundShipmentHeader;
    /**
     * A list of inbound shipment item information.
     * @type {Array<InboundShipmentItem>}
     * @memberof InboundShipmentRequest
     */
    InboundShipmentItems: Array<InboundShipmentItem>;
    /**
     * A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @type {string}
     * @memberof InboundShipmentRequest
     */
    MarketplaceId: string;
}
/**
 * The response schema for this operation.
 * @export
 * @interface InboundShipmentResponse
 */
export interface InboundShipmentResponse {
    /**
     *
     * @type {InboundShipmentResult}
     * @memberof InboundShipmentResponse
     */
    payload?: InboundShipmentResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof InboundShipmentResponse
     */
    errors?: Array<Error>;
}
/**
 * Result of an inbound shipment operation
 * @export
 * @interface InboundShipmentResult
 */
export interface InboundShipmentResult {
    /**
     * The shipment identifier submitted in the request.
     * @type {string}
     * @memberof InboundShipmentResult
     */
    ShipmentId: string;
}
/**
 * How the seller intends to provide box contents information for a shipment. Leaving this field blank is equivalent to selecting `NONE`, which will incur a fee if the seller does not provide box contents information.
 * @export
 * @enum {string}
 */
export declare enum IntendedBoxContentsSource {
    None = "NONE",
    Feed = "FEED",
    _2DBarcode = "2D_BARCODE"
}
/**
 * Contains details about an invalid ASIN
 * @export
 * @interface InvalidASIN
 */
export interface InvalidASIN {
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof InvalidASIN
     */
    ASIN?: string;
    /**
     *
     * @type {ErrorReason}
     * @memberof InvalidASIN
     */
    ErrorReason?: ErrorReason | 'DoesNotExist' | 'InvalidASIN';
}
/**
 * Contains detail about an invalid SKU
 * @export
 * @interface InvalidSKU
 */
export interface InvalidSKU {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof InvalidSKU
     */
    SellerSKU?: string;
    /**
     *
     * @type {ErrorReason}
     * @memberof InvalidSKU
     */
    ErrorReason?: ErrorReason | 'DoesNotExist' | 'InvalidASIN';
}
/**
 * Download URL for a label
 * @export
 * @interface LabelDownloadURL
 */
export interface LabelDownloadURL {
    /**
     * URL to download the label for the package. Note: The URL will only be valid for 15 seconds
     * @type {string}
     * @memberof LabelDownloadURL
     */
    DownloadURL?: string;
}
/**
 * The preference for label preparation for an inbound shipment.
 * @export
 * @enum {string}
 */
export declare enum LabelPrepPreference {
    SellerLabel = "SELLER_LABEL",
    AmazonLabelOnly = "AMAZON_LABEL_ONLY",
    AmazonLabelPreferred = "AMAZON_LABEL_PREFERRED"
}
/**
 * The type of label preparation that is required for the inbound shipment.
 * @export
 * @enum {string}
 */
export declare enum LabelPrepType {
    NoLabel = "NO_LABEL",
    SellerLabel = "SELLER_LABEL",
    AmazonLabel = "AMAZON_LABEL"
}
/**
 * Error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occured.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * A message that describes the error condition in a human-readable form.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
    /**
     * Additional details that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
}
/**
 * Information that you provide to Amazon about a Less Than Truckload/Full Truckload (LTL/FTL) shipment by a carrier that has not partnered with Amazon.
 * @export
 * @interface NonPartneredLtlDataInput
 */
export interface NonPartneredLtlDataInput {
    /**
     * The carrier that you are using for the inbound shipment.
     * @type {string}
     * @memberof NonPartneredLtlDataInput
     */
    CarrierName: string;
    /**
     * The PRO number (\"progressive number\" or \"progressive ID\") assigned to the shipment by the carrier.
     * @type {string}
     * @memberof NonPartneredLtlDataInput
     */
    ProNumber: string;
}
/**
 * Information returned by Amazon about a Less Than Truckload/Full Truckload (LTL/FTL) shipment shipped by a carrier that has not partnered with Amazon.
 * @export
 * @interface NonPartneredLtlDataOutput
 */
export interface NonPartneredLtlDataOutput {
    /**
     * The carrier that you are using for the inbound shipment.
     * @type {string}
     * @memberof NonPartneredLtlDataOutput
     */
    CarrierName: string;
    /**
     * The PRO number (\"progressive number\" or \"progressive ID\") assigned to the shipment by the carrier.
     * @type {string}
     * @memberof NonPartneredLtlDataOutput
     */
    ProNumber: string;
}
/**
 * Information that you provide to Amazon about a Small Parcel shipment shipped by a carrier that has not partnered with Amazon.
 * @export
 * @interface NonPartneredSmallParcelDataInput
 */
export interface NonPartneredSmallParcelDataInput {
    /**
     * The carrier that you are using for the inbound shipment.
     * @type {string}
     * @memberof NonPartneredSmallParcelDataInput
     */
    CarrierName: string;
    /**
     * A list of package tracking information.
     * @type {Array<NonPartneredSmallParcelPackageInput>}
     * @memberof NonPartneredSmallParcelDataInput
     */
    PackageList: Array<NonPartneredSmallParcelPackageInput>;
}
/**
 * Information returned by Amazon about a Small Parcel shipment by a carrier that has not partnered with Amazon.
 * @export
 * @interface NonPartneredSmallParcelDataOutput
 */
export interface NonPartneredSmallParcelDataOutput {
    /**
     * A list of packages, including carrier, tracking number, and status information for each package.
     * @type {Array<NonPartneredSmallParcelPackageOutput>}
     * @memberof NonPartneredSmallParcelDataOutput
     */
    PackageList: Array<NonPartneredSmallParcelPackageOutput>;
}
/**
 * The tracking number of the package, provided by the carrier.
 * @export
 * @interface NonPartneredSmallParcelPackageInput
 */
export interface NonPartneredSmallParcelPackageInput {
    /**
     * The tracking number of the package, provided by the carrier.
     * @type {string}
     * @memberof NonPartneredSmallParcelPackageInput
     */
    TrackingId: string;
}
/**
 * Carrier, tracking number, and status information for the package.
 * @export
 * @interface NonPartneredSmallParcelPackageOutput
 */
export interface NonPartneredSmallParcelPackageOutput {
    /**
     * The carrier that you are using for the inbound shipment.
     * @type {string}
     * @memberof NonPartneredSmallParcelPackageOutput
     */
    CarrierName: string;
    /**
     * The tracking number of the package, provided by the carrier.
     * @type {string}
     * @memberof NonPartneredSmallParcelPackageOutput
     */
    TrackingId: string;
    /**
     *
     * @type {PackageStatus}
     * @memberof NonPartneredSmallParcelPackageOutput
     */
    PackageStatus: PackageStatus | 'SHIPPED' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN' | 'RECEIVING' | 'CLOSED' | 'DELETED';
}
/**
 * The shipment status of the package.
 * @export
 * @enum {string}
 */
export declare enum PackageStatus {
    Shipped = "SHIPPED",
    InTransit = "IN_TRANSIT",
    Delivered = "DELIVERED",
    CheckedIn = "CHECKED_IN",
    Receiving = "RECEIVING",
    Closed = "CLOSED",
    Deleted = "DELETED"
}
/**
 * Pallet information.
 * @export
 * @interface Pallet
 */
export interface Pallet {
    /**
     *
     * @type {Dimensions}
     * @memberof Pallet
     */
    Dimensions: Dimensions;
    /**
     *
     * @type {Weight}
     * @memberof Pallet
     */
    Weight?: Weight;
    /**
     * Indicates whether pallets will be stacked when carrier arrives for pick-up.
     * @type {boolean}
     * @memberof Pallet
     */
    IsStacked: boolean;
}
/**
 * The estimated shipping cost for a shipment using an Amazon-partnered carrier.
 * @export
 * @interface PartneredEstimate
 */
export interface PartneredEstimate {
    /**
     *
     * @type {Amount}
     * @memberof PartneredEstimate
     */
    Amount: Amount;
    /**
     * Timestamp in ISO 8601 format.
     * @type {string}
     * @memberof PartneredEstimate
     */
    ConfirmDeadline?: string;
    /**
     * Timestamp in ISO 8601 format.
     * @type {string}
     * @memberof PartneredEstimate
     */
    VoidDeadline?: string;
}
/**
 * Information that is required by an Amazon-partnered carrier to ship a Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.
 * @export
 * @interface PartneredLtlDataInput
 */
export interface PartneredLtlDataInput {
    /**
     *
     * @type {Contact}
     * @memberof PartneredLtlDataInput
     */
    Contact?: Contact;
    /**
     * Contains an unsigned integer
     * @type {number}
     * @memberof PartneredLtlDataInput
     */
    BoxCount?: number;
    /**
     *
     * @type {SellerFreightClass}
     * @memberof PartneredLtlDataInput
     */
    SellerFreightClass?: SellerFreightClass | '50' | '55' | '60' | '65' | '70' | '77.5' | '85' | '92.5' | '100' | '110' | '125' | '150' | '175' | '200' | '250' | '300' | '400' | '500';
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof PartneredLtlDataInput
     */
    FreightReadyDate?: string;
    /**
     * A list of pallet information.
     * @type {Array<Pallet>}
     * @memberof PartneredLtlDataInput
     */
    PalletList?: Array<Pallet>;
    /**
     *
     * @type {Weight}
     * @memberof PartneredLtlDataInput
     */
    TotalWeight?: Weight;
    /**
     *
     * @type {Amount}
     * @memberof PartneredLtlDataInput
     */
    SellerDeclaredValue?: Amount;
}
/**
 * Information returned by Amazon about a Less Than Truckload/Full Truckload (LTL/FTL) shipment by an Amazon-partnered carrier.
 * @export
 * @interface PartneredLtlDataOutput
 */
export interface PartneredLtlDataOutput {
    /**
     *
     * @type {Contact}
     * @memberof PartneredLtlDataOutput
     */
    Contact: Contact;
    /**
     * Contains an unsigned integer
     * @type {number}
     * @memberof PartneredLtlDataOutput
     */
    BoxCount: number;
    /**
     *
     * @type {SellerFreightClass}
     * @memberof PartneredLtlDataOutput
     */
    SellerFreightClass?: SellerFreightClass | '50' | '55' | '60' | '65' | '70' | '77.5' | '85' | '92.5' | '100' | '110' | '125' | '150' | '175' | '200' | '250' | '300' | '400' | '500';
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof PartneredLtlDataOutput
     */
    FreightReadyDate: string;
    /**
     * A list of pallet information.
     * @type {Array<Pallet>}
     * @memberof PartneredLtlDataOutput
     */
    PalletList: Array<Pallet>;
    /**
     *
     * @type {Weight}
     * @memberof PartneredLtlDataOutput
     */
    TotalWeight: Weight;
    /**
     *
     * @type {Amount}
     * @memberof PartneredLtlDataOutput
     */
    SellerDeclaredValue?: Amount;
    /**
     *
     * @type {Amount}
     * @memberof PartneredLtlDataOutput
     */
    AmazonCalculatedValue?: Amount;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof PartneredLtlDataOutput
     */
    PreviewPickupDate: string;
    /**
     * Type containing date in string format
     * @type {string}
     * @memberof PartneredLtlDataOutput
     */
    PreviewDeliveryDate: string;
    /**
     *
     * @type {SellerFreightClass}
     * @memberof PartneredLtlDataOutput
     */
    PreviewFreightClass: SellerFreightClass | '50' | '55' | '60' | '65' | '70' | '77.5' | '85' | '92.5' | '100' | '110' | '125' | '150' | '175' | '200' | '250' | '300' | '400' | '500';
    /**
     * A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment.
     * @type {string}
     * @memberof PartneredLtlDataOutput
     */
    AmazonReferenceId: string;
    /**
     * Indicates whether the bill of lading for the shipment is available.
     * @type {boolean}
     * @memberof PartneredLtlDataOutput
     */
    IsBillOfLadingAvailable: boolean;
    /**
     *
     * @type {PartneredEstimate}
     * @memberof PartneredLtlDataOutput
     */
    PartneredEstimate?: PartneredEstimate;
    /**
     * The carrier for the inbound shipment.
     * @type {string}
     * @memberof PartneredLtlDataOutput
     */
    CarrierName: string;
}
/**
 * Information that is required by an Amazon-partnered carrier to ship a Small Parcel inbound shipment.
 * @export
 * @interface PartneredSmallParcelDataInput
 */
export interface PartneredSmallParcelDataInput {
    /**
     * A list of dimensions and weight information for packages.
     * @type {Array<PartneredSmallParcelPackageInput>}
     * @memberof PartneredSmallParcelDataInput
     */
    PackageList?: Array<PartneredSmallParcelPackageInput>;
    /**
     * The Amazon-partnered carrier to use for the inbound shipment. **`CarrierName`** values in France (FR), Italy (IT), Spain (ES), the United Kingdom (UK), and the United States (US): `UNITED_PARCEL_SERVICE_INC`. <br> **`CarrierName`** values in Germany (DE): `DHL_STANDARD`,`UNITED_PARCEL_SERVICE_INC`. <br>Default: `UNITED_PARCEL_SERVICE_INC`.
     * @type {string}
     * @memberof PartneredSmallParcelDataInput
     */
    CarrierName?: string;
}
/**
 * Information returned by Amazon about a Small Parcel shipment by an Amazon-partnered carrier.
 * @export
 * @interface PartneredSmallParcelDataOutput
 */
export interface PartneredSmallParcelDataOutput {
    /**
     * A list of packages, including shipping information from the Amazon-partnered carrier.
     * @type {Array<PartneredSmallParcelPackageOutput>}
     * @memberof PartneredSmallParcelDataOutput
     */
    PackageList: Array<PartneredSmallParcelPackageOutput>;
    /**
     *
     * @type {PartneredEstimate}
     * @memberof PartneredSmallParcelDataOutput
     */
    PartneredEstimate?: PartneredEstimate;
}
/**
 * Dimension and weight information for the package.
 * @export
 * @interface PartneredSmallParcelPackageInput
 */
export interface PartneredSmallParcelPackageInput {
    /**
     *
     * @type {Dimensions}
     * @memberof PartneredSmallParcelPackageInput
     */
    Dimensions: Dimensions;
    /**
     *
     * @type {Weight}
     * @memberof PartneredSmallParcelPackageInput
     */
    Weight: Weight;
}
/**
 * Dimension, weight, and shipping information for the package.
 * @export
 * @interface PartneredSmallParcelPackageOutput
 */
export interface PartneredSmallParcelPackageOutput {
    /**
     *
     * @type {Dimensions}
     * @memberof PartneredSmallParcelPackageOutput
     */
    Dimensions: Dimensions;
    /**
     *
     * @type {Weight}
     * @memberof PartneredSmallParcelPackageOutput
     */
    Weight: Weight;
    /**
     * The carrier specified with a previous call to putTransportDetails.
     * @type {string}
     * @memberof PartneredSmallParcelPackageOutput
     */
    CarrierName: string;
    /**
     * The tracking number of the package, provided by the carrier.
     * @type {string}
     * @memberof PartneredSmallParcelPackageOutput
     */
    TrackingId: string;
    /**
     *
     * @type {PackageStatus}
     * @memberof PartneredSmallParcelPackageOutput
     */
    PackageStatus: PackageStatus | 'SHIPPED' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN' | 'RECEIVING' | 'CLOSED' | 'DELETED';
}
/**
 * Preparation instructions and who is responsible for the preparation.
 * @export
 * @interface PrepDetails
 */
export interface PrepDetails {
    /**
     *
     * @type {PrepInstruction}
     * @memberof PrepDetails
     */
    PrepInstruction: PrepInstruction | 'Polybagging' | 'BubbleWrapping' | 'Taping' | 'BlackShrinkWrapping' | 'Labeling' | 'HangGarment' | 'SetCreation' | 'Boxing' | 'RemoveFromHanger' | 'Debundle' | 'SuffocationStickering' | 'CapSealing' | 'SetStickering' | 'BlankStickering' | 'ShipsInProductPackaging' | 'NoPrep';
    /**
     *
     * @type {PrepOwner}
     * @memberof PrepDetails
     */
    PrepOwner: PrepOwner | 'AMAZON' | 'SELLER';
}
/**
 * Item preparation instructions.
 * @export
 * @enum {string}
 */
export declare enum PrepGuidance {
    ConsultHelpDocuments = "ConsultHelpDocuments",
    NoAdditionalPrepRequired = "NoAdditionalPrepRequired",
    SeePrepInstructionsList = "SeePrepInstructionsList"
}
/**
 * Preparation instructions for shipping an item to Amazon\'s fulfillment network. For more information about preparing items for shipment to Amazon\'s fulfillment network, see the Seller Central Help for your marketplace.
 * @export
 * @enum {string}
 */
export declare enum PrepInstruction {
    Polybagging = "Polybagging",
    BubbleWrapping = "BubbleWrapping",
    Taping = "Taping",
    BlackShrinkWrapping = "BlackShrinkWrapping",
    Labeling = "Labeling",
    HangGarment = "HangGarment",
    SetCreation = "SetCreation",
    Boxing = "Boxing",
    RemoveFromHanger = "RemoveFromHanger",
    Debundle = "Debundle",
    SuffocationStickering = "SuffocationStickering",
    CapSealing = "CapSealing",
    SetStickering = "SetStickering",
    BlankStickering = "BlankStickering",
    ShipsInProductPackaging = "ShipsInProductPackaging",
    NoPrep = "NoPrep"
}
/**
 * Indicates who will prepare the item.
 * @export
 * @enum {string}
 */
export declare enum PrepOwner {
    Amazon = "AMAZON",
    Seller = "SELLER"
}
/**
 * The request schema for a putTransportDetails operation.
 * @export
 * @interface PutTransportDetailsRequest
 */
export interface PutTransportDetailsRequest {
    /**
     * Indicates whether a putTransportDetails request is for an Amazon-partnered carrier.
     * @type {boolean}
     * @memberof PutTransportDetailsRequest
     */
    IsPartnered: boolean;
    /**
     *
     * @type {ShipmentType}
     * @memberof PutTransportDetailsRequest
     */
    ShipmentType: ShipmentType | 'SP' | 'LTL';
    /**
     *
     * @type {TransportDetailInput}
     * @memberof PutTransportDetailsRequest
     */
    TransportDetails: TransportDetailInput;
}
/**
 * Workflow status for a shipment with an Amazon-partnered carrier.
 * @export
 * @interface PutTransportDetailsResponse
 */
export interface PutTransportDetailsResponse {
    /**
     *
     * @type {CommonTransportResult}
     * @memberof PutTransportDetailsResponse
     */
    payload?: CommonTransportResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof PutTransportDetailsResponse
     */
    errors?: Array<Error>;
}
/**
 * Reasons why a given seller SKU is not recommended for shipment to Amazon\'s fulfillment network.
 * @export
 * @interface SKUInboundGuidance
 */
export interface SKUInboundGuidance {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof SKUInboundGuidance
     */
    SellerSKU: string;
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof SKUInboundGuidance
     */
    ASIN: string;
    /**
     *
     * @type {InboundGuidance}
     * @memberof SKUInboundGuidance
     */
    InboundGuidance: InboundGuidance | 'InboundNotRecommended' | 'InboundOK';
    /**
     * A list of inbound guidance reason information.
     * @type {Array<GuidanceReason>}
     * @memberof SKUInboundGuidance
     */
    GuidanceReasonList?: Array<(GuidanceReason | 'SlowMovingASIN' | 'NoApplicableGuidance')>;
}
/**
 * Labeling requirements and item preparation instructions to help you prepare items for shipment to Amazon\'s fulfillment network.
 * @export
 * @interface SKUPrepInstructions
 */
export interface SKUPrepInstructions {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof SKUPrepInstructions
     */
    SellerSKU?: string;
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof SKUPrepInstructions
     */
    ASIN?: string;
    /**
     *
     * @type {BarcodeInstruction}
     * @memberof SKUPrepInstructions
     */
    BarcodeInstruction?: BarcodeInstruction | 'RequiresFNSKULabel' | 'CanUseOriginalBarcode' | 'MustProvideSellerSKU';
    /**
     *
     * @type {PrepGuidance}
     * @memberof SKUPrepInstructions
     */
    PrepGuidance?: PrepGuidance | 'ConsultHelpDocuments' | 'NoAdditionalPrepRequired' | 'SeePrepInstructionsList';
    /**
     * A list of preparation instructions to help with item sourcing decisions.
     * @type {Array<PrepInstruction>}
     * @memberof SKUPrepInstructions
     */
    PrepInstructionList?: Array<(PrepInstruction | 'Polybagging' | 'BubbleWrapping' | 'Taping' | 'BlackShrinkWrapping' | 'Labeling' | 'HangGarment' | 'SetCreation' | 'Boxing' | 'RemoveFromHanger' | 'Debundle' | 'SuffocationStickering' | 'CapSealing' | 'SetStickering' | 'BlankStickering' | 'ShipsInProductPackaging' | 'NoPrep')>;
    /**
     * A list of preparation instructions and fees for Amazon to prep goods for shipment.
     * @type {Array<AmazonPrepFeesDetails>}
     * @memberof SKUPrepInstructions
     */
    AmazonPrepFeesDetailsList?: Array<AmazonPrepFeesDetails>;
}
/**
 * The freight class of the shipment. For information about determining the freight class, contact the carrier.
 * @export
 * @enum {string}
 */
export declare enum SellerFreightClass {
    _50 = "50",
    _55 = "55",
    _60 = "60",
    _65 = "65",
    _70 = "70",
    _775 = "77.5",
    _85 = "85",
    _925 = "92.5",
    _100 = "100",
    _110 = "110",
    _125 = "125",
    _150 = "150",
    _175 = "175",
    _200 = "200",
    _250 = "250",
    _300 = "300",
    _400 = "400",
    _500 = "500"
}
/**
 * Indicates the status of the inbound shipment. When used with the createInboundShipment operation, WORKING is the only valid value. When used with the updateInboundShipment operation, possible values are WORKING, SHIPPED or CANCELLED.
 * @export
 * @enum {string}
 */
export declare enum ShipmentStatus {
    Working = "WORKING",
    Shipped = "SHIPPED",
    Receiving = "RECEIVING",
    Cancelled = "CANCELLED",
    Deleted = "DELETED",
    Closed = "CLOSED",
    Error = "ERROR",
    InTransit = "IN_TRANSIT",
    Delivered = "DELIVERED",
    CheckedIn = "CHECKED_IN"
}
/**
 * Specifies the carrier shipment type in a putTransportDetails request.
 * @export
 * @enum {string}
 */
export declare enum ShipmentType {
    Sp = "SP",
    Ltl = "LTL"
}
/**
 * Inbound shipment information, including carrier details, shipment status, and the workflow status for a request for shipment with an Amazon-partnered carrier.
 * @export
 * @interface TransportContent
 */
export interface TransportContent {
    /**
     *
     * @type {TransportHeader}
     * @memberof TransportContent
     */
    TransportHeader: TransportHeader;
    /**
     *
     * @type {TransportDetailOutput}
     * @memberof TransportContent
     */
    TransportDetails: TransportDetailOutput;
    /**
     *
     * @type {TransportResult}
     * @memberof TransportContent
     */
    TransportResult: TransportResult;
}
/**
 * Information required to create an Amazon-partnered carrier shipping estimate, or to alert the Amazon fulfillment center to the arrival of an inbound shipment by a non-Amazon-partnered carrier.
 * @export
 * @interface TransportDetailInput
 */
export interface TransportDetailInput {
    /**
     *
     * @type {PartneredSmallParcelDataInput}
     * @memberof TransportDetailInput
     */
    PartneredSmallParcelData?: PartneredSmallParcelDataInput;
    /**
     *
     * @type {NonPartneredSmallParcelDataInput}
     * @memberof TransportDetailInput
     */
    NonPartneredSmallParcelData?: NonPartneredSmallParcelDataInput;
    /**
     *
     * @type {PartneredLtlDataInput}
     * @memberof TransportDetailInput
     */
    PartneredLtlData?: PartneredLtlDataInput;
    /**
     *
     * @type {NonPartneredLtlDataInput}
     * @memberof TransportDetailInput
     */
    NonPartneredLtlData?: NonPartneredLtlDataInput;
}
/**
 * Inbound shipment information, including carrier details and shipment status.
 * @export
 * @interface TransportDetailOutput
 */
export interface TransportDetailOutput {
    /**
     *
     * @type {PartneredSmallParcelDataOutput}
     * @memberof TransportDetailOutput
     */
    PartneredSmallParcelData?: PartneredSmallParcelDataOutput;
    /**
     *
     * @type {NonPartneredSmallParcelDataOutput}
     * @memberof TransportDetailOutput
     */
    NonPartneredSmallParcelData?: NonPartneredSmallParcelDataOutput;
    /**
     *
     * @type {PartneredLtlDataOutput}
     * @memberof TransportDetailOutput
     */
    PartneredLtlData?: PartneredLtlDataOutput;
    /**
     *
     * @type {NonPartneredLtlDataOutput}
     * @memberof TransportDetailOutput
     */
    NonPartneredLtlData?: NonPartneredLtlDataOutput;
}
/**
 * The shipping identifier, information about whether the shipment is by an Amazon-partnered carrier, and information about whether the shipment is Small Parcel or Less Than Truckload/Full Truckload (LTL/FTL).
 * @export
 * @interface TransportHeader
 */
export interface TransportHeader {
    /**
     * The Amazon seller identifier.
     * @type {string}
     * @memberof TransportHeader
     */
    SellerId: string;
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof TransportHeader
     */
    ShipmentId: string;
    /**
     * Indicates whether a putTransportDetails request is for a partnered carrier.  Possible values:  * true – Request is for an Amazon-partnered carrier.  * false – Request is for a non-Amazon-partnered carrier.
     * @type {boolean}
     * @memberof TransportHeader
     */
    IsPartnered: boolean;
    /**
     *
     * @type {ShipmentType}
     * @memberof TransportHeader
     */
    ShipmentType: ShipmentType | 'SP' | 'LTL';
}
/**
 * The workflow status for a shipment with an Amazon-partnered carrier.
 * @export
 * @interface TransportResult
 */
export interface TransportResult {
    /**
     *
     * @type {TransportStatus}
     * @memberof TransportResult
     */
    TransportStatus: TransportStatus | 'WORKING' | 'ESTIMATING' | 'ESTIMATED' | 'ERROR_ON_ESTIMATING' | 'CONFIRMING' | 'CONFIRMED' | 'ERROR_ON_CONFIRMING' | 'VOIDING' | 'VOIDED' | 'ERROR_IN_VOIDING' | 'ERROR';
    /**
     * An error code that identifies the type of error that occured.
     * @type {string}
     * @memberof TransportResult
     */
    ErrorCode?: string;
    /**
     * A message that describes the error condition.
     * @type {string}
     * @memberof TransportResult
     */
    ErrorDescription?: string;
}
/**
 * Indicates the status of the Amazon-partnered carrier shipment.
 * @export
 * @enum {string}
 */
export declare enum TransportStatus {
    Working = "WORKING",
    Estimating = "ESTIMATING",
    Estimated = "ESTIMATED",
    ErrorOnEstimating = "ERROR_ON_ESTIMATING",
    Confirming = "CONFIRMING",
    Confirmed = "CONFIRMED",
    ErrorOnConfirming = "ERROR_ON_CONFIRMING",
    Voiding = "VOIDING",
    Voided = "VOIDED",
    ErrorInVoiding = "ERROR_IN_VOIDING",
    Error = "ERROR"
}
/**
 * Indicates the unit of measurement.
 * @export
 * @enum {string}
 */
export declare enum UnitOfMeasurement {
    Inches = "inches",
    Centimeters = "centimeters"
}
/**
 * Indicates the unit of weight.
 * @export
 * @enum {string}
 */
export declare enum UnitOfWeight {
    Pounds = "pounds",
    Kilograms = "kilograms"
}
/**
 * The response schema for the voidTransport operation.
 * @export
 * @interface VoidTransportResponse
 */
export interface VoidTransportResponse {
    /**
     *
     * @type {CommonTransportResult}
     * @memberof VoidTransportResponse
     */
    payload?: CommonTransportResult;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof VoidTransportResponse
     */
    errors?: Array<Error>;
}
/**
 * The weight of the package.
 * @export
 * @interface Weight
 */
export interface Weight {
    /**
     * Number format that supports decimal.
     * @type {number}
     * @memberof Weight
     */
    Value: number;
    /**
     *
     * @type {UnitOfWeight}
     * @memberof Weight
     */
    Unit: UnitOfWeight | 'pounds' | 'kilograms';
}
/**
 * FbaInboundApi - axios parameter creator
 * @export
 */
export declare const FbaInboundApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns information needed to confirm a shipment for pre-order. Call this operation after calling the getPreorderInfo operation to get the NeedByDate value and other pre-order information about the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {string} needByDate Date that the shipment must arrive at the Amazon fulfillment center to avoid delivery promise breaks for pre-ordered items. Must be in YYYY-MM-DD format. The response to the getPreorderInfo operation returns this value.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    confirmPreorder: (shipmentId: string, needByDate: string, marketplaceId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Confirms that the seller accepts the Amazon-partnered shipping estimate, agrees to allow Amazon to charge their account for the shipping cost, and requests that the Amazon-partnered carrier ship the inbound shipment.  Prior to calling the confirmTransport operation, you should call the getTransportDetails operation to get the Amazon-partnered shipping estimate.  Important: After confirming the transportation request, if the seller decides that they do not want the Amazon-partnered carrier to ship the inbound shipment, you can call the voidTransport operation to cancel the transportation request. Note that for a Small Parcel shipment, the seller has 24 hours after confirming a transportation request to void the transportation request. For a Less Than Truckload/Full Truckload (LTL/FTL) shipment, the seller has one hour after confirming a transportation request to void it. After the grace period has expired the seller\'s account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    confirmTransport: (shipmentId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a new inbound shipment based on the specified shipmentId that was returned by the createInboundShipmentPlan operation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {InboundShipmentRequest} body The request schema for the InboundShipmentRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInboundShipment: (shipmentId: string, body: InboundShipmentRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Returns one or more inbound shipment plans, which provide the information you need to create one or more inbound shipments for a set of items that you specify. Multiple inbound shipment plans might be required so that items can be optimally placed in Amazon\'s fulfillment network—for example, positioning inventory closer to the customer. Alternatively, two inbound shipment plans might be created with the same Amazon fulfillment center destination if the two shipment plans require different processing—for example, items that require labels must be shipped separately from stickerless, commingled inventory.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {CreateInboundShipmentPlanRequest} body The request schema for the CreateInboundShipmentPlanRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInboundShipmentPlan: (body: CreateInboundShipmentPlanRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Initiates the process of estimating the shipping cost for an inbound shipment by an Amazon-partnered carrier.  Prior to calling the estimateTransport operation, you must call the putTransportDetails operation to provide Amazon with the transportation information for the inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    estimateTransport: (shipmentId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBillOfLading: (shipmentId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {'PackageLabel_Letter_2' | 'PackageLabel_Letter_4' | 'PackageLabel_Letter_6' | 'PackageLabel_Letter_6_CarrierLeft' | 'PackageLabel_A4_2' | 'PackageLabel_A4_4' | 'PackageLabel_Plain_Paper' | 'PackageLabel_Plain_Paper_CarrierBottom' | 'PackageLabel_Thermal' | 'PackageLabel_Thermal_Unified' | 'PackageLabel_Thermal_NonPCP' | 'PackageLabel_Thermal_No_Carrier_Rotation'} pageType The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
     * @param {'BARCODE_2D' | 'UNIQUE' | 'PALLET'} labelType The type of labels requested.
     * @param {number} [numberOfPackages] The number of packages in the shipment.
     * @param {Array<string>} [packageLabelsToPrint] A list of identifiers that specify packages for which you want package labels printed.  Must match CartonId values previously passed using the FBA Inbound Shipment Carton Information Feed. If not, the operation returns the IncorrectPackageIdentifier error code.
     * @param {number} [numberOfPallets] The number of pallets in the shipment. This returns four identical labels for each pallet.
     * @param {number} [pageSize] The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
     * @param {number} [pageStartIndex] The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabels: (shipmentId: string, pageType: "PackageLabel_Letter_2" | "PackageLabel_Letter_4" | "PackageLabel_Letter_6" | "PackageLabel_Letter_6_CarrierLeft" | "PackageLabel_A4_2" | "PackageLabel_A4_4" | "PackageLabel_Plain_Paper" | "PackageLabel_Plain_Paper_CarrierBottom" | "PackageLabel_Thermal" | "PackageLabel_Thermal_Unified" | "PackageLabel_Thermal_NonPCP" | "PackageLabel_Thermal_No_Carrier_Rotation", labelType: "BARCODE_2D" | "UNIQUE" | "PALLET", numberOfPackages?: number, packageLabelsToPrint?: Array<string>, numberOfPallets?: number, pageSize?: number, pageStartIndex?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Returns pre-order information, including dates, that a seller needs before confirming a shipment for pre-order.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPreorderInfo: (shipmentId: string, marketplaceId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipToCountryCode The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
     * @param {Array<string>} [sellerSKUList] A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
     * @param {Array<string>} [aSINList] A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPrepInstructions: (shipToCountryCode: string, sellerSKUList?: Array<string>, aSINList?: Array<string>, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {'DATE_RANGE' | 'NEXT_TOKEN'} queryType Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [nextToken] A string token returned in the response to your previous request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentItems: (queryType: "DATE_RANGE" | "NEXT_TOKEN", marketplaceId: string, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier used for selecting items in a specific inbound shipment.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentItemsByShipmentId: (shipmentId: string, marketplaceId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {'SHIPMENT' | 'DATE_RANGE' | 'NEXT_TOKEN'} queryType Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {Array<'WORKING' | 'READY_TO_SHIP' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN'>} [shipmentStatusList] A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
     * @param {Array<string>} [shipmentIdList] A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
     * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [nextToken] A string token returned in the response to your previous request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipments: (queryType: "SHIPMENT" | "DATE_RANGE" | "NEXT_TOKEN", marketplaceId: string, shipmentStatusList?: Array<"WORKING" | "READY_TO_SHIP" | "SHIPPED" | "RECEIVING" | "CANCELLED" | "DELETED" | "CLOSED" | "ERROR" | "IN_TRANSIT" | "DELIVERED" | "CHECKED_IN">, shipmentIdList?: Array<string>, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns current transportation information about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransportDetails: (shipmentId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Sends transportation information to Amazon about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {PutTransportDetailsRequest} body The request schema for the PutTransportDetailsRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putTransportDetails: (shipmentId: string, body: PutTransportDetailsRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Updates or removes items from the inbound shipment identified by the specified shipment identifier. Adding new items is not supported.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {InboundShipmentRequest} body The request schema for the InboundShipmentRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateInboundShipment: (shipmentId: string, body: InboundShipmentRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Cancels a previously-confirmed request to ship an inbound shipment using an Amazon-partnered carrier.  To be successful, you must call this operation before the VoidDeadline date that is returned by the getTransportDetails operation.  Important: The VoidDeadline date is 24 hours after you confirm a Small Parcel shipment transportation request or one hour after you confirm a Less Than Truckload/Full Truckload (LTL/FTL) shipment transportation request. After the void deadline passes, your account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidTransport: (shipmentId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * FbaInboundApi - functional programming interface
 * @export
 */
export declare const FbaInboundApiFp: (configuration?: Configuration) => {
    /**
     * Returns information needed to confirm a shipment for pre-order. Call this operation after calling the getPreorderInfo operation to get the NeedByDate value and other pre-order information about the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {string} needByDate Date that the shipment must arrive at the Amazon fulfillment center to avoid delivery promise breaks for pre-ordered items. Must be in YYYY-MM-DD format. The response to the getPreorderInfo operation returns this value.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    confirmPreorder(shipmentId: string, needByDate: string, marketplaceId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConfirmPreorderResponse>>;
    /**
     * Confirms that the seller accepts the Amazon-partnered shipping estimate, agrees to allow Amazon to charge their account for the shipping cost, and requests that the Amazon-partnered carrier ship the inbound shipment.  Prior to calling the confirmTransport operation, you should call the getTransportDetails operation to get the Amazon-partnered shipping estimate.  Important: After confirming the transportation request, if the seller decides that they do not want the Amazon-partnered carrier to ship the inbound shipment, you can call the voidTransport operation to cancel the transportation request. Note that for a Small Parcel shipment, the seller has 24 hours after confirming a transportation request to void the transportation request. For a Less Than Truckload/Full Truckload (LTL/FTL) shipment, the seller has one hour after confirming a transportation request to void it. After the grace period has expired the seller\'s account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    confirmTransport(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConfirmTransportResponse>>;
    /**
     * Returns a new inbound shipment based on the specified shipmentId that was returned by the createInboundShipmentPlan operation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {InboundShipmentRequest} body The request schema for the InboundShipmentRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInboundShipment(shipmentId: string, body: InboundShipmentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InboundShipmentResponse>>;
    /**
     * Returns one or more inbound shipment plans, which provide the information you need to create one or more inbound shipments for a set of items that you specify. Multiple inbound shipment plans might be required so that items can be optimally placed in Amazon\'s fulfillment network—for example, positioning inventory closer to the customer. Alternatively, two inbound shipment plans might be created with the same Amazon fulfillment center destination if the two shipment plans require different processing—for example, items that require labels must be shipped separately from stickerless, commingled inventory.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {CreateInboundShipmentPlanRequest} body The request schema for the CreateInboundShipmentPlanRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInboundShipmentPlan(body: CreateInboundShipmentPlanRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateInboundShipmentPlanResponse>>;
    /**
     * Initiates the process of estimating the shipping cost for an inbound shipment by an Amazon-partnered carrier.  Prior to calling the estimateTransport operation, you must call the putTransportDetails operation to provide Amazon with the transportation information for the inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    estimateTransport(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EstimateTransportResponse>>;
    /**
     * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBillOfLading(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBillOfLadingResponse>>;
    /**
     * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {'PackageLabel_Letter_2' | 'PackageLabel_Letter_4' | 'PackageLabel_Letter_6' | 'PackageLabel_Letter_6_CarrierLeft' | 'PackageLabel_A4_2' | 'PackageLabel_A4_4' | 'PackageLabel_Plain_Paper' | 'PackageLabel_Plain_Paper_CarrierBottom' | 'PackageLabel_Thermal' | 'PackageLabel_Thermal_Unified' | 'PackageLabel_Thermal_NonPCP' | 'PackageLabel_Thermal_No_Carrier_Rotation'} pageType The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
     * @param {'BARCODE_2D' | 'UNIQUE' | 'PALLET'} labelType The type of labels requested.
     * @param {number} [numberOfPackages] The number of packages in the shipment.
     * @param {Array<string>} [packageLabelsToPrint] A list of identifiers that specify packages for which you want package labels printed.  Must match CartonId values previously passed using the FBA Inbound Shipment Carton Information Feed. If not, the operation returns the IncorrectPackageIdentifier error code.
     * @param {number} [numberOfPallets] The number of pallets in the shipment. This returns four identical labels for each pallet.
     * @param {number} [pageSize] The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
     * @param {number} [pageStartIndex] The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabels(shipmentId: string, pageType: "PackageLabel_Letter_2" | "PackageLabel_Letter_4" | "PackageLabel_Letter_6" | "PackageLabel_Letter_6_CarrierLeft" | "PackageLabel_A4_2" | "PackageLabel_A4_4" | "PackageLabel_Plain_Paper" | "PackageLabel_Plain_Paper_CarrierBottom" | "PackageLabel_Thermal" | "PackageLabel_Thermal_Unified" | "PackageLabel_Thermal_NonPCP" | "PackageLabel_Thermal_No_Carrier_Rotation", labelType: "BARCODE_2D" | "UNIQUE" | "PALLET", numberOfPackages?: number, packageLabelsToPrint?: Array<string>, numberOfPallets?: number, pageSize?: number, pageStartIndex?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLabelsResponse>>;
    /**
     * Returns pre-order information, including dates, that a seller needs before confirming a shipment for pre-order.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPreorderInfo(shipmentId: string, marketplaceId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPreorderInfoResponse>>;
    /**
     * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipToCountryCode The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
     * @param {Array<string>} [sellerSKUList] A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
     * @param {Array<string>} [aSINList] A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPrepInstructions(shipToCountryCode: string, sellerSKUList?: Array<string>, aSINList?: Array<string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPrepInstructionsResponse>>;
    /**
     * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {'DATE_RANGE' | 'NEXT_TOKEN'} queryType Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [nextToken] A string token returned in the response to your previous request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentItems(queryType: "DATE_RANGE" | "NEXT_TOKEN", marketplaceId: string, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentItemsResponse>>;
    /**
     * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier used for selecting items in a specific inbound shipment.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentItemsByShipmentId(shipmentId: string, marketplaceId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentItemsResponse>>;
    /**
     * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {'SHIPMENT' | 'DATE_RANGE' | 'NEXT_TOKEN'} queryType Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {Array<'WORKING' | 'READY_TO_SHIP' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN'>} [shipmentStatusList] A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
     * @param {Array<string>} [shipmentIdList] A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
     * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [nextToken] A string token returned in the response to your previous request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipments(queryType: "SHIPMENT" | "DATE_RANGE" | "NEXT_TOKEN", marketplaceId: string, shipmentStatusList?: Array<"WORKING" | "READY_TO_SHIP" | "SHIPPED" | "RECEIVING" | "CANCELLED" | "DELETED" | "CLOSED" | "ERROR" | "IN_TRANSIT" | "DELIVERED" | "CHECKED_IN">, shipmentIdList?: Array<string>, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentsResponse>>;
    /**
     * Returns current transportation information about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransportDetails(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTransportDetailsResponse>>;
    /**
     * Sends transportation information to Amazon about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {PutTransportDetailsRequest} body The request schema for the PutTransportDetailsRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putTransportDetails(shipmentId: string, body: PutTransportDetailsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PutTransportDetailsResponse>>;
    /**
     * Updates or removes items from the inbound shipment identified by the specified shipment identifier. Adding new items is not supported.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {InboundShipmentRequest} body The request schema for the InboundShipmentRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateInboundShipment(shipmentId: string, body: InboundShipmentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InboundShipmentResponse>>;
    /**
     * Cancels a previously-confirmed request to ship an inbound shipment using an Amazon-partnered carrier.  To be successful, you must call this operation before the VoidDeadline date that is returned by the getTransportDetails operation.  Important: The VoidDeadline date is 24 hours after you confirm a Small Parcel shipment transportation request or one hour after you confirm a Less Than Truckload/Full Truckload (LTL/FTL) shipment transportation request. After the void deadline passes, your account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidTransport(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VoidTransportResponse>>;
};
/**
 * FbaInboundApi - factory interface
 * @export
 */
export declare const FbaInboundApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns information needed to confirm a shipment for pre-order. Call this operation after calling the getPreorderInfo operation to get the NeedByDate value and other pre-order information about the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {string} needByDate Date that the shipment must arrive at the Amazon fulfillment center to avoid delivery promise breaks for pre-ordered items. Must be in YYYY-MM-DD format. The response to the getPreorderInfo operation returns this value.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    confirmPreorder(shipmentId: string, needByDate: string, marketplaceId: string, options?: any): AxiosPromise<ConfirmPreorderResponse>;
    /**
     * Confirms that the seller accepts the Amazon-partnered shipping estimate, agrees to allow Amazon to charge their account for the shipping cost, and requests that the Amazon-partnered carrier ship the inbound shipment.  Prior to calling the confirmTransport operation, you should call the getTransportDetails operation to get the Amazon-partnered shipping estimate.  Important: After confirming the transportation request, if the seller decides that they do not want the Amazon-partnered carrier to ship the inbound shipment, you can call the voidTransport operation to cancel the transportation request. Note that for a Small Parcel shipment, the seller has 24 hours after confirming a transportation request to void the transportation request. For a Less Than Truckload/Full Truckload (LTL/FTL) shipment, the seller has one hour after confirming a transportation request to void it. After the grace period has expired the seller\'s account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    confirmTransport(shipmentId: string, options?: any): AxiosPromise<ConfirmTransportResponse>;
    /**
     * Returns a new inbound shipment based on the specified shipmentId that was returned by the createInboundShipmentPlan operation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {InboundShipmentRequest} body The request schema for the InboundShipmentRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInboundShipment(shipmentId: string, body: InboundShipmentRequest, options?: any): AxiosPromise<InboundShipmentResponse>;
    /**
     * Returns one or more inbound shipment plans, which provide the information you need to create one or more inbound shipments for a set of items that you specify. Multiple inbound shipment plans might be required so that items can be optimally placed in Amazon\'s fulfillment network—for example, positioning inventory closer to the customer. Alternatively, two inbound shipment plans might be created with the same Amazon fulfillment center destination if the two shipment plans require different processing—for example, items that require labels must be shipped separately from stickerless, commingled inventory.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {CreateInboundShipmentPlanRequest} body The request schema for the CreateInboundShipmentPlanRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInboundShipmentPlan(body: CreateInboundShipmentPlanRequest, options?: any): AxiosPromise<CreateInboundShipmentPlanResponse>;
    /**
     * Initiates the process of estimating the shipping cost for an inbound shipment by an Amazon-partnered carrier.  Prior to calling the estimateTransport operation, you must call the putTransportDetails operation to provide Amazon with the transportation information for the inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    estimateTransport(shipmentId: string, options?: any): AxiosPromise<EstimateTransportResponse>;
    /**
     * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBillOfLading(shipmentId: string, options?: any): AxiosPromise<GetBillOfLadingResponse>;
    /**
     * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {'PackageLabel_Letter_2' | 'PackageLabel_Letter_4' | 'PackageLabel_Letter_6' | 'PackageLabel_Letter_6_CarrierLeft' | 'PackageLabel_A4_2' | 'PackageLabel_A4_4' | 'PackageLabel_Plain_Paper' | 'PackageLabel_Plain_Paper_CarrierBottom' | 'PackageLabel_Thermal' | 'PackageLabel_Thermal_Unified' | 'PackageLabel_Thermal_NonPCP' | 'PackageLabel_Thermal_No_Carrier_Rotation'} pageType The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
     * @param {'BARCODE_2D' | 'UNIQUE' | 'PALLET'} labelType The type of labels requested.
     * @param {number} [numberOfPackages] The number of packages in the shipment.
     * @param {Array<string>} [packageLabelsToPrint] A list of identifiers that specify packages for which you want package labels printed.  Must match CartonId values previously passed using the FBA Inbound Shipment Carton Information Feed. If not, the operation returns the IncorrectPackageIdentifier error code.
     * @param {number} [numberOfPallets] The number of pallets in the shipment. This returns four identical labels for each pallet.
     * @param {number} [pageSize] The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
     * @param {number} [pageStartIndex] The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabels(shipmentId: string, pageType: "PackageLabel_Letter_2" | "PackageLabel_Letter_4" | "PackageLabel_Letter_6" | "PackageLabel_Letter_6_CarrierLeft" | "PackageLabel_A4_2" | "PackageLabel_A4_4" | "PackageLabel_Plain_Paper" | "PackageLabel_Plain_Paper_CarrierBottom" | "PackageLabel_Thermal" | "PackageLabel_Thermal_Unified" | "PackageLabel_Thermal_NonPCP" | "PackageLabel_Thermal_No_Carrier_Rotation", labelType: "BARCODE_2D" | "UNIQUE" | "PALLET", numberOfPackages?: number, packageLabelsToPrint?: Array<string>, numberOfPallets?: number, pageSize?: number, pageStartIndex?: number, options?: any): AxiosPromise<GetLabelsResponse>;
    /**
     * Returns pre-order information, including dates, that a seller needs before confirming a shipment for pre-order.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPreorderInfo(shipmentId: string, marketplaceId: string, options?: any): AxiosPromise<GetPreorderInfoResponse>;
    /**
     * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipToCountryCode The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
     * @param {Array<string>} [sellerSKUList] A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
     * @param {Array<string>} [aSINList] A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPrepInstructions(shipToCountryCode: string, sellerSKUList?: Array<string>, aSINList?: Array<string>, options?: any): AxiosPromise<GetPrepInstructionsResponse>;
    /**
     * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {'DATE_RANGE' | 'NEXT_TOKEN'} queryType Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [nextToken] A string token returned in the response to your previous request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentItems(queryType: "DATE_RANGE" | "NEXT_TOKEN", marketplaceId: string, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: any): AxiosPromise<GetShipmentItemsResponse>;
    /**
     * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier used for selecting items in a specific inbound shipment.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentItemsByShipmentId(shipmentId: string, marketplaceId: string, options?: any): AxiosPromise<GetShipmentItemsResponse>;
    /**
     * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {'SHIPMENT' | 'DATE_RANGE' | 'NEXT_TOKEN'} queryType Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
     * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @param {Array<'WORKING' | 'READY_TO_SHIP' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN'>} [shipmentStatusList] A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
     * @param {Array<string>} [shipmentIdList] A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
     * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @param {string} [nextToken] A string token returned in the response to your previous request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipments(queryType: "SHIPMENT" | "DATE_RANGE" | "NEXT_TOKEN", marketplaceId: string, shipmentStatusList?: Array<"WORKING" | "READY_TO_SHIP" | "SHIPPED" | "RECEIVING" | "CANCELLED" | "DELETED" | "CLOSED" | "ERROR" | "IN_TRANSIT" | "DELIVERED" | "CHECKED_IN">, shipmentIdList?: Array<string>, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: any): AxiosPromise<GetShipmentsResponse>;
    /**
     * Returns current transportation information about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransportDetails(shipmentId: string, options?: any): AxiosPromise<GetTransportDetailsResponse>;
    /**
     * Sends transportation information to Amazon about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {PutTransportDetailsRequest} body The request schema for the PutTransportDetailsRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putTransportDetails(shipmentId: string, body: PutTransportDetailsRequest, options?: any): AxiosPromise<PutTransportDetailsResponse>;
    /**
     * Updates or removes items from the inbound shipment identified by the specified shipment identifier. Adding new items is not supported.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {InboundShipmentRequest} body The request schema for the InboundShipmentRequest operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateInboundShipment(shipmentId: string, body: InboundShipmentRequest, options?: any): AxiosPromise<InboundShipmentResponse>;
    /**
     * Cancels a previously-confirmed request to ship an inbound shipment using an Amazon-partnered carrier.  To be successful, you must call this operation before the VoidDeadline date that is returned by the getTransportDetails operation.  Important: The VoidDeadline date is 24 hours after you confirm a Small Parcel shipment transportation request or one hour after you confirm a Less Than Truckload/Full Truckload (LTL/FTL) shipment transportation request. After the void deadline passes, your account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidTransport(shipmentId: string, options?: any): AxiosPromise<VoidTransportResponse>;
};
/**
 * Request parameters for confirmPreorder operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiConfirmPreorderRequest
 */
export interface FbaInboundApiConfirmPreorderRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiConfirmPreorder
     */
    readonly shipmentId: string;
    /**
     * Date that the shipment must arrive at the Amazon fulfillment center to avoid delivery promise breaks for pre-ordered items. Must be in YYYY-MM-DD format. The response to the getPreorderInfo operation returns this value.
     * @type {string}
     * @memberof FbaInboundApiConfirmPreorder
     */
    readonly needByDate: string;
    /**
     * A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @type {string}
     * @memberof FbaInboundApiConfirmPreorder
     */
    readonly marketplaceId: string;
}
/**
 * Request parameters for confirmTransport operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiConfirmTransportRequest
 */
export interface FbaInboundApiConfirmTransportRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiConfirmTransport
     */
    readonly shipmentId: string;
}
/**
 * Request parameters for createInboundShipment operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiCreateInboundShipmentRequest
 */
export interface FbaInboundApiCreateInboundShipmentRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiCreateInboundShipment
     */
    readonly shipmentId: string;
    /**
     * The request schema for the InboundShipmentRequest operation.
     * @type {InboundShipmentRequest}
     * @memberof FbaInboundApiCreateInboundShipment
     */
    readonly body: InboundShipmentRequest;
}
/**
 * Request parameters for createInboundShipmentPlan operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiCreateInboundShipmentPlanRequest
 */
export interface FbaInboundApiCreateInboundShipmentPlanRequest {
    /**
     * The request schema for the CreateInboundShipmentPlanRequest operation.
     * @type {CreateInboundShipmentPlanRequest}
     * @memberof FbaInboundApiCreateInboundShipmentPlan
     */
    readonly body: CreateInboundShipmentPlanRequest;
}
/**
 * Request parameters for estimateTransport operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiEstimateTransportRequest
 */
export interface FbaInboundApiEstimateTransportRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiEstimateTransport
     */
    readonly shipmentId: string;
}
/**
 * Request parameters for getBillOfLading operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetBillOfLadingRequest
 */
export interface FbaInboundApiGetBillOfLadingRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiGetBillOfLading
     */
    readonly shipmentId: string;
}
/**
 * Request parameters for getLabels operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetLabelsRequest
 */
export interface FbaInboundApiGetLabelsRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiGetLabels
     */
    readonly shipmentId: string;
    /**
     * The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
     * @type {'PackageLabel_Letter_2' | 'PackageLabel_Letter_4' | 'PackageLabel_Letter_6' | 'PackageLabel_Letter_6_CarrierLeft' | 'PackageLabel_A4_2' | 'PackageLabel_A4_4' | 'PackageLabel_Plain_Paper' | 'PackageLabel_Plain_Paper_CarrierBottom' | 'PackageLabel_Thermal' | 'PackageLabel_Thermal_Unified' | 'PackageLabel_Thermal_NonPCP' | 'PackageLabel_Thermal_No_Carrier_Rotation'}
     * @memberof FbaInboundApiGetLabels
     */
    readonly pageType: 'PackageLabel_Letter_2' | 'PackageLabel_Letter_4' | 'PackageLabel_Letter_6' | 'PackageLabel_Letter_6_CarrierLeft' | 'PackageLabel_A4_2' | 'PackageLabel_A4_4' | 'PackageLabel_Plain_Paper' | 'PackageLabel_Plain_Paper_CarrierBottom' | 'PackageLabel_Thermal' | 'PackageLabel_Thermal_Unified' | 'PackageLabel_Thermal_NonPCP' | 'PackageLabel_Thermal_No_Carrier_Rotation';
    /**
     * The type of labels requested.
     * @type {'BARCODE_2D' | 'UNIQUE' | 'PALLET'}
     * @memberof FbaInboundApiGetLabels
     */
    readonly labelType: 'BARCODE_2D' | 'UNIQUE' | 'PALLET';
    /**
     * The number of packages in the shipment.
     * @type {number}
     * @memberof FbaInboundApiGetLabels
     */
    readonly numberOfPackages?: number;
    /**
     * A list of identifiers that specify packages for which you want package labels printed.  Must match CartonId values previously passed using the FBA Inbound Shipment Carton Information Feed. If not, the operation returns the IncorrectPackageIdentifier error code.
     * @type {Array<string>}
     * @memberof FbaInboundApiGetLabels
     */
    readonly packageLabelsToPrint?: Array<string>;
    /**
     * The number of pallets in the shipment. This returns four identical labels for each pallet.
     * @type {number}
     * @memberof FbaInboundApiGetLabels
     */
    readonly numberOfPallets?: number;
    /**
     * The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
     * @type {number}
     * @memberof FbaInboundApiGetLabels
     */
    readonly pageSize?: number;
    /**
     * The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
     * @type {number}
     * @memberof FbaInboundApiGetLabels
     */
    readonly pageStartIndex?: number;
}
/**
 * Request parameters for getPreorderInfo operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetPreorderInfoRequest
 */
export interface FbaInboundApiGetPreorderInfoRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiGetPreorderInfo
     */
    readonly shipmentId: string;
    /**
     * A marketplace identifier. Specifies the marketplace the shipment is tied to.
     * @type {string}
     * @memberof FbaInboundApiGetPreorderInfo
     */
    readonly marketplaceId: string;
}
/**
 * Request parameters for getPrepInstructions operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetPrepInstructionsRequest
 */
export interface FbaInboundApiGetPrepInstructionsRequest {
    /**
     * The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
     * @type {string}
     * @memberof FbaInboundApiGetPrepInstructions
     */
    readonly shipToCountryCode: string;
    /**
     * A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
     * @type {Array<string>}
     * @memberof FbaInboundApiGetPrepInstructions
     */
    readonly sellerSKUList?: Array<string>;
    /**
     * A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
     * @type {Array<string>}
     * @memberof FbaInboundApiGetPrepInstructions
     */
    readonly aSINList?: Array<string>;
}
/**
 * Request parameters for getShipmentItems operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetShipmentItemsRequest
 */
export interface FbaInboundApiGetShipmentItemsRequest {
    /**
     * Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
     * @type {'DATE_RANGE' | 'NEXT_TOKEN'}
     * @memberof FbaInboundApiGetShipmentItems
     */
    readonly queryType: 'DATE_RANGE' | 'NEXT_TOKEN';
    /**
     * A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @type {string}
     * @memberof FbaInboundApiGetShipmentItems
     */
    readonly marketplaceId: string;
    /**
     * A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @type {string}
     * @memberof FbaInboundApiGetShipmentItems
     */
    readonly lastUpdatedAfter?: string;
    /**
     * A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @type {string}
     * @memberof FbaInboundApiGetShipmentItems
     */
    readonly lastUpdatedBefore?: string;
    /**
     * A string token returned in the response to your previous request.
     * @type {string}
     * @memberof FbaInboundApiGetShipmentItems
     */
    readonly nextToken?: string;
}
/**
 * Request parameters for getShipmentItemsByShipmentId operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetShipmentItemsByShipmentIdRequest
 */
export interface FbaInboundApiGetShipmentItemsByShipmentIdRequest {
    /**
     * A shipment identifier used for selecting items in a specific inbound shipment.
     * @type {string}
     * @memberof FbaInboundApiGetShipmentItemsByShipmentId
     */
    readonly shipmentId: string;
    /**
     * A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @type {string}
     * @memberof FbaInboundApiGetShipmentItemsByShipmentId
     */
    readonly marketplaceId: string;
}
/**
 * Request parameters for getShipments operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetShipmentsRequest
 */
export interface FbaInboundApiGetShipmentsRequest {
    /**
     * Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
     * @type {'SHIPMENT' | 'DATE_RANGE' | 'NEXT_TOKEN'}
     * @memberof FbaInboundApiGetShipments
     */
    readonly queryType: 'SHIPMENT' | 'DATE_RANGE' | 'NEXT_TOKEN';
    /**
     * A marketplace identifier. Specifies the marketplace where the product would be stored.
     * @type {string}
     * @memberof FbaInboundApiGetShipments
     */
    readonly marketplaceId: string;
    /**
     * A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
     * @type {Array<'WORKING' | 'READY_TO_SHIP' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN'>}
     * @memberof FbaInboundApiGetShipments
     */
    readonly shipmentStatusList?: Array<'WORKING' | 'READY_TO_SHIP' | 'SHIPPED' | 'RECEIVING' | 'CANCELLED' | 'DELETED' | 'CLOSED' | 'ERROR' | 'IN_TRANSIT' | 'DELIVERED' | 'CHECKED_IN'>;
    /**
     * A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
     * @type {Array<string>}
     * @memberof FbaInboundApiGetShipments
     */
    readonly shipmentIdList?: Array<string>;
    /**
     * A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @type {string}
     * @memberof FbaInboundApiGetShipments
     */
    readonly lastUpdatedAfter?: string;
    /**
     * A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     * @type {string}
     * @memberof FbaInboundApiGetShipments
     */
    readonly lastUpdatedBefore?: string;
    /**
     * A string token returned in the response to your previous request.
     * @type {string}
     * @memberof FbaInboundApiGetShipments
     */
    readonly nextToken?: string;
}
/**
 * Request parameters for getTransportDetails operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiGetTransportDetailsRequest
 */
export interface FbaInboundApiGetTransportDetailsRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiGetTransportDetails
     */
    readonly shipmentId: string;
}
/**
 * Request parameters for putTransportDetails operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiPutTransportDetailsRequest
 */
export interface FbaInboundApiPutTransportDetailsRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiPutTransportDetails
     */
    readonly shipmentId: string;
    /**
     * The request schema for the PutTransportDetailsRequest operation.
     * @type {PutTransportDetailsRequest}
     * @memberof FbaInboundApiPutTransportDetails
     */
    readonly body: PutTransportDetailsRequest;
}
/**
 * Request parameters for updateInboundShipment operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiUpdateInboundShipmentRequest
 */
export interface FbaInboundApiUpdateInboundShipmentRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiUpdateInboundShipment
     */
    readonly shipmentId: string;
    /**
     * The request schema for the InboundShipmentRequest operation.
     * @type {InboundShipmentRequest}
     * @memberof FbaInboundApiUpdateInboundShipment
     */
    readonly body: InboundShipmentRequest;
}
/**
 * Request parameters for voidTransport operation in FbaInboundApi.
 * @export
 * @interface FbaInboundApiVoidTransportRequest
 */
export interface FbaInboundApiVoidTransportRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     * @type {string}
     * @memberof FbaInboundApiVoidTransport
     */
    readonly shipmentId: string;
}
/**
 * FbaInboundApi - object-oriented interface
 * @export
 * @class FbaInboundApi
 * @extends {BaseAPI}
 */
export declare class FbaInboundApi extends BaseAPI {
    /**
     * Returns information needed to confirm a shipment for pre-order. Call this operation after calling the getPreorderInfo operation to get the NeedByDate value and other pre-order information about the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiConfirmPreorderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    confirmPreorder(requestParameters: FbaInboundApiConfirmPreorderRequest, options?: any): Promise<import("axios").AxiosResponse<ConfirmPreorderResponse, any>>;
    /**
     * Confirms that the seller accepts the Amazon-partnered shipping estimate, agrees to allow Amazon to charge their account for the shipping cost, and requests that the Amazon-partnered carrier ship the inbound shipment.  Prior to calling the confirmTransport operation, you should call the getTransportDetails operation to get the Amazon-partnered shipping estimate.  Important: After confirming the transportation request, if the seller decides that they do not want the Amazon-partnered carrier to ship the inbound shipment, you can call the voidTransport operation to cancel the transportation request. Note that for a Small Parcel shipment, the seller has 24 hours after confirming a transportation request to void the transportation request. For a Less Than Truckload/Full Truckload (LTL/FTL) shipment, the seller has one hour after confirming a transportation request to void it. After the grace period has expired the seller\'s account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiConfirmTransportRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    confirmTransport(requestParameters: FbaInboundApiConfirmTransportRequest, options?: any): Promise<import("axios").AxiosResponse<ConfirmTransportResponse, any>>;
    /**
     * Returns a new inbound shipment based on the specified shipmentId that was returned by the createInboundShipmentPlan operation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiCreateInboundShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    createInboundShipment(requestParameters: FbaInboundApiCreateInboundShipmentRequest, options?: any): Promise<import("axios").AxiosResponse<InboundShipmentResponse, any>>;
    /**
     * Returns one or more inbound shipment plans, which provide the information you need to create one or more inbound shipments for a set of items that you specify. Multiple inbound shipment plans might be required so that items can be optimally placed in Amazon\'s fulfillment network—for example, positioning inventory closer to the customer. Alternatively, two inbound shipment plans might be created with the same Amazon fulfillment center destination if the two shipment plans require different processing—for example, items that require labels must be shipped separately from stickerless, commingled inventory.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiCreateInboundShipmentPlanRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    createInboundShipmentPlan(requestParameters: FbaInboundApiCreateInboundShipmentPlanRequest, options?: any): Promise<import("axios").AxiosResponse<CreateInboundShipmentPlanResponse, any>>;
    /**
     * Initiates the process of estimating the shipping cost for an inbound shipment by an Amazon-partnered carrier.  Prior to calling the estimateTransport operation, you must call the putTransportDetails operation to provide Amazon with the transportation information for the inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiEstimateTransportRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    estimateTransport(requestParameters: FbaInboundApiEstimateTransportRequest, options?: any): Promise<import("axios").AxiosResponse<EstimateTransportResponse, any>>;
    /**
     * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetBillOfLadingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getBillOfLading(requestParameters: FbaInboundApiGetBillOfLadingRequest, options?: any): Promise<import("axios").AxiosResponse<GetBillOfLadingResponse, any>>;
    /**
     * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetLabelsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getLabels(requestParameters: FbaInboundApiGetLabelsRequest, options?: any): Promise<import("axios").AxiosResponse<GetLabelsResponse, any>>;
    /**
     * Returns pre-order information, including dates, that a seller needs before confirming a shipment for pre-order.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetPreorderInfoRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getPreorderInfo(requestParameters: FbaInboundApiGetPreorderInfoRequest, options?: any): Promise<import("axios").AxiosResponse<GetPreorderInfoResponse, any>>;
    /**
     * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetPrepInstructionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getPrepInstructions(requestParameters: FbaInboundApiGetPrepInstructionsRequest, options?: any): Promise<import("axios").AxiosResponse<GetPrepInstructionsResponse, any>>;
    /**
     * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetShipmentItemsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getShipmentItems(requestParameters: FbaInboundApiGetShipmentItemsRequest, options?: any): Promise<import("axios").AxiosResponse<GetShipmentItemsResponse, any>>;
    /**
     * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetShipmentItemsByShipmentIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getShipmentItemsByShipmentId(requestParameters: FbaInboundApiGetShipmentItemsByShipmentIdRequest, options?: any): Promise<import("axios").AxiosResponse<GetShipmentItemsResponse, any>>;
    /**
     * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetShipmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getShipments(requestParameters: FbaInboundApiGetShipmentsRequest, options?: any): Promise<import("axios").AxiosResponse<GetShipmentsResponse, any>>;
    /**
     * Returns current transportation information about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiGetTransportDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    getTransportDetails(requestParameters: FbaInboundApiGetTransportDetailsRequest, options?: any): Promise<import("axios").AxiosResponse<GetTransportDetailsResponse, any>>;
    /**
     * Sends transportation information to Amazon about an inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiPutTransportDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    putTransportDetails(requestParameters: FbaInboundApiPutTransportDetailsRequest, options?: any): Promise<import("axios").AxiosResponse<PutTransportDetailsResponse, any>>;
    /**
     * Updates or removes items from the inbound shipment identified by the specified shipment identifier. Adding new items is not supported.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiUpdateInboundShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    updateInboundShipment(requestParameters: FbaInboundApiUpdateInboundShipmentRequest, options?: any): Promise<import("axios").AxiosResponse<InboundShipmentResponse, any>>;
    /**
     * Cancels a previously-confirmed request to ship an inbound shipment using an Amazon-partnered carrier.  To be successful, you must call this operation before the VoidDeadline date that is returned by the getTransportDetails operation.  Important: The VoidDeadline date is 24 hours after you confirm a Small Parcel shipment transportation request or one hour after you confirm a Less Than Truckload/Full Truckload (LTL/FTL) shipment transportation request. After the void deadline passes, your account will be charged for the shipping cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FbaInboundApiVoidTransportRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInboundApi
     */
    voidTransport(requestParameters: FbaInboundApiVoidTransportRequest, options?: any): Promise<import("axios").AxiosResponse<VoidTransportResponse, any>>;
}
