/**
 * Selling Partner API for FBA Inventory
 * The Selling Partner API for FBA Inventory lets you programmatically retrieve information about inventory in Amazon\'s fulfillment network.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * The object with the list of Inventory to be added
 * @export
 * @interface AddInventoryRequest
 */
export interface AddInventoryRequest {
    /**
     * List of Inventory to be added
     * @type {Array<InventoryItem>}
     * @memberof AddInventoryRequest
     */
    inventoryItems?: Array<InventoryItem>;
}
/**
 * The response schema for the AddInventory operation.
 * @export
 * @interface AddInventoryResponse
 */
export interface AddInventoryResponse {
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof AddInventoryResponse
     */
    errors?: Array<Error>;
}
/**
 * An item to be created in the inventory.
 * @export
 * @interface CreateInventoryItemRequest
 */
export interface CreateInventoryItemRequest {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof CreateInventoryItemRequest
     */
    sellerSku: string;
    /**
     * The marketplaceId.
     * @type {string}
     * @memberof CreateInventoryItemRequest
     */
    marketplaceId: string;
    /**
     * The name of the item.
     * @type {string}
     * @memberof CreateInventoryItemRequest
     */
    productName: string;
}
/**
 * The response schema for the CreateInventoryItem operation.
 * @export
 * @interface CreateInventoryItemResponse
 */
export interface CreateInventoryItemResponse {
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof CreateInventoryItemResponse
     */
    errors?: Array<Error>;
}
/**
 * The response schema for the DeleteInventoryItem operation.
 * @export
 * @interface DeleteInventoryItemResponse
 */
export interface DeleteInventoryItemResponse {
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof DeleteInventoryItemResponse
     */
    errors?: Array<Error>;
}
/**
 * The Response schema.
 * @export
 * @interface GetInventorySummariesResponse
 */
export interface GetInventorySummariesResponse {
    /**
     *
     * @type {GetInventorySummariesResult}
     * @memberof GetInventorySummariesResponse
     */
    payload?: GetInventorySummariesResult;
    /**
     *
     * @type {Pagination}
     * @memberof GetInventorySummariesResponse
     */
    pagination?: Pagination;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetInventorySummariesResponse
     */
    errors?: Array<Error>;
}
/**
 * The payload schema for the getInventorySummaries operation.
 * @export
 * @interface GetInventorySummariesResult
 */
export interface GetInventorySummariesResult {
    /**
     *
     * @type {Granularity}
     * @memberof GetInventorySummariesResult
     */
    granularity: Granularity;
    /**
     * A list of inventory summaries.
     * @type {Array<InventorySummary>}
     * @memberof GetInventorySummariesResult
     */
    inventorySummaries: Array<InventorySummary>;
}
/**
 * Describes a granularity at which inventory data can be aggregated. For example, if you use Marketplace granularity, the fulfillable quantity will reflect inventory that could be fulfilled in the given marketplace.
 * @export
 * @interface Granularity
 */
export interface Granularity {
    /**
     * The granularity type for the inventory aggregation level.
     * @type {string}
     * @memberof Granularity
     */
    granularityType?: string;
    /**
     * The granularity ID for the specified granularity type. When granularityType is Marketplace, specify the marketplaceId.
     * @type {string}
     * @memberof Granularity
     */
    granularityId?: string;
}
/**
 * Summarized inventory details. This object will not appear if the details parameter in the request is false.
 * @export
 * @interface InventoryDetails
 */
export interface InventoryDetails {
    /**
     * The item quantity that can be picked, packed, and shipped.
     * @type {number}
     * @memberof InventoryDetails
     */
    fulfillableQuantity?: number;
    /**
     * The number of units in an inbound shipment for which you have notified Amazon.
     * @type {number}
     * @memberof InventoryDetails
     */
    inboundWorkingQuantity?: number;
    /**
     * The number of units in an inbound shipment that you have notified Amazon about and have provided a tracking number.
     * @type {number}
     * @memberof InventoryDetails
     */
    inboundShippedQuantity?: number;
    /**
     * The number of units that have not yet been received at an Amazon fulfillment center for processing, but are part of an inbound shipment with some units that have already been received and processed.
     * @type {number}
     * @memberof InventoryDetails
     */
    inboundReceivingQuantity?: number;
    /**
     *
     * @type {ReservedQuantity}
     * @memberof InventoryDetails
     */
    reservedQuantity?: ReservedQuantity;
    /**
     *
     * @type {ResearchingQuantity}
     * @memberof InventoryDetails
     */
    researchingQuantity?: ResearchingQuantity;
    /**
     *
     * @type {UnfulfillableQuantity}
     * @memberof InventoryDetails
     */
    unfulfillableQuantity?: UnfulfillableQuantity;
}
/**
 * An item in the list of inventory to be added.
 * @export
 * @interface InventoryItem
 */
export interface InventoryItem {
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof InventoryItem
     */
    sellerSku: string;
    /**
     * The marketplaceId.
     * @type {string}
     * @memberof InventoryItem
     */
    marketplaceId: string;
    /**
     * The quantity of item to add.
     * @type {number}
     * @memberof InventoryItem
     */
    quantity: number;
}
/**
 * Inventory summary for a specific item.
 * @export
 * @interface InventorySummary
 */
export interface InventorySummary {
    /**
     * The Amazon Standard Identification Number (ASIN) of an item.
     * @type {string}
     * @memberof InventorySummary
     */
    asin?: string;
    /**
     * Amazon\'s fulfillment network SKU identifier.
     * @type {string}
     * @memberof InventorySummary
     */
    fnSku?: string;
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof InventorySummary
     */
    sellerSku?: string;
    /**
     * The condition of the item as described by the seller (for example, New Item).
     * @type {string}
     * @memberof InventorySummary
     */
    condition?: string;
    /**
     *
     * @type {InventoryDetails}
     * @memberof InventorySummary
     */
    inventoryDetails?: InventoryDetails;
    /**
     * The date and time that any quantity was last updated.
     * @type {string}
     * @memberof InventorySummary
     */
    lastUpdatedTime?: string;
    /**
     * The localized language product title of the item within the specific marketplace.
     * @type {string}
     * @memberof InventorySummary
     */
    productName?: string;
    /**
     * The total number of units in an inbound shipment or in Amazon fulfillment centers.
     * @type {number}
     * @memberof InventorySummary
     */
    totalQuantity?: number;
}
/**
 * An error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occurred.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * A message that describes the error condition in a human-readable form.
     * @type {string}
     * @memberof ModelError
     */
    message?: string;
    /**
     * Additional information that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
}
/**
 * The process of returning the results to a request in batches of a defined size called pages. This is done to exercise some control over result size and overall throughput. It\'s a form of traffic management.
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * A generated string used to retrieve the next page of the result. If nextToken is returned, pass the value of nextToken to the next request. If nextToken is not returned, there are no more items to return.
     * @type {string}
     * @memberof Pagination
     */
    nextToken?: string;
}
/**
 * The number of misplaced or warehouse damaged units that are actively being confirmed at our fulfillment centers.
 * @export
 * @interface ResearchingQuantity
 */
export interface ResearchingQuantity {
    /**
     * The total number of units currently being researched in Amazon\'s fulfillment network.
     * @type {number}
     * @memberof ResearchingQuantity
     */
    totalResearchingQuantity?: number;
    /**
     * A list of quantity details for items currently being researched.
     * @type {Array<ResearchingQuantityEntry>}
     * @memberof ResearchingQuantity
     */
    researchingQuantityBreakdown?: Array<ResearchingQuantityEntry>;
}
/**
 * The misplaced or warehouse damaged inventory that is actively being confirmed at our fulfillment centers.
 * @export
 * @interface ResearchingQuantityEntry
 */
export interface ResearchingQuantityEntry {
    /**
     * The duration of the research.
     * @type {string}
     * @memberof ResearchingQuantityEntry
     */
    name: ResearchingQuantityEntryNameEnum | 'researchingQuantityInShortTerm' | 'researchingQuantityInMidTerm' | 'researchingQuantityInLongTerm';
    /**
     * The number of units.
     * @type {number}
     * @memberof ResearchingQuantityEntry
     */
    quantity: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ResearchingQuantityEntryNameEnum {
    ResearchingQuantityInShortTerm = "researchingQuantityInShortTerm",
    ResearchingQuantityInMidTerm = "researchingQuantityInMidTerm",
    ResearchingQuantityInLongTerm = "researchingQuantityInLongTerm"
}
/**
 * The quantity of reserved inventory.
 * @export
 * @interface ReservedQuantity
 */
export interface ReservedQuantity {
    /**
     * The total number of units in Amazon\'s fulfillment network that are currently being picked, packed, and shipped; or are sidelined for measurement, sampling, or other internal processes.
     * @type {number}
     * @memberof ReservedQuantity
     */
    totalReservedQuantity?: number;
    /**
     * The number of units reserved for customer orders.
     * @type {number}
     * @memberof ReservedQuantity
     */
    pendingCustomerOrderQuantity?: number;
    /**
     * The number of units being transferred from one fulfillment center to another.
     * @type {number}
     * @memberof ReservedQuantity
     */
    pendingTransshipmentQuantity?: number;
    /**
     * The number of units that have been sidelined at the fulfillment center for additional processing.
     * @type {number}
     * @memberof ReservedQuantity
     */
    fcProcessingQuantity?: number;
}
/**
 * The quantity of unfulfillable inventory.
 * @export
 * @interface UnfulfillableQuantity
 */
export interface UnfulfillableQuantity {
    /**
     * The total number of units in Amazon\'s fulfillment network in unsellable condition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    totalUnfulfillableQuantity?: number;
    /**
     * The number of units in customer damaged disposition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    customerDamagedQuantity?: number;
    /**
     * The number of units in warehouse damaged disposition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    warehouseDamagedQuantity?: number;
    /**
     * The number of units in distributor damaged disposition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    distributorDamagedQuantity?: number;
    /**
     * The number of units in carrier damaged disposition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    carrierDamagedQuantity?: number;
    /**
     * The number of units in defective disposition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    defectiveQuantity?: number;
    /**
     * The number of units in expired disposition.
     * @type {number}
     * @memberof UnfulfillableQuantity
     */
    expiredQuantity?: number;
}
/**
 * FbaInventoryApi - axios parameter creator
 * @export
 */
export declare const FbaInventoryApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Requests that Amazon add items to the Sandbox Inventory with desired amount of quantity in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {string} xAmznIdempotencyToken A unique token/requestId provided with each call to ensure idempotency.
     * @param {AddInventoryRequest} addInventoryRequestBody List of items to add to Sandbox inventory.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addInventory: (xAmznIdempotencyToken: string, addInventoryRequestBody: AddInventoryRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Requests that Amazon create product-details in the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {CreateInventoryItemRequest} createInventoryItemRequestBody CreateInventoryItem Request Body Parameter.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInventoryItem: (createInventoryItemRequestBody: CreateInventoryItemRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Requests that Amazon Deletes an item from the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {string} sellerSku A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @param {string} marketplaceId The marketplace ID for the marketplace for which the sellerSku is to be deleted.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInventoryItem: (sellerSku: string, marketplaceId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a list of inventory summaries. The summaries returned depend on the presence or absence of the startDateTime, sellerSkus and sellerSku parameters:  - All inventory summaries with available details are returned when the startDateTime, sellerSkus and sellerSku parameters are omitted. - When startDateTime is provided, the operation returns inventory summaries that have had changes after the date and time specified. The sellerSkus and sellerSku parameters are ignored. Important: To avoid errors, use both startDateTime and nextToken to get the next page of inventory summaries that have changed after the date and time specified. - When the sellerSkus parameter is provided, the operation returns inventory summaries for only the specified sellerSkus. The sellerSku parameter is ignored. - When the sellerSku parameter is provided, the operation returns inventory summaries for only the specified sellerSku.  Note: The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to URL Encoding.  Usage Plan:  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see Usage Plans and Rate Limits in the Selling Partner API.
     * @param {'Marketplace'} granularityType The granularity type for the inventory aggregation level.
     * @param {string} granularityId The granularity ID for the inventory aggregation level.
     * @param {Array<string>} marketplaceIds The marketplace ID for the marketplace for which to return inventory summaries.
     * @param {boolean} [details] true to return inventory summaries with additional summarized inventory details and quantities. Otherwise, returns inventory summaries only (default value).
     * @param {string} [startDateTime] A start date and time in ISO8601 format. If specified, all inventory summaries that have changed since then are returned. You must specify a date and time that is no earlier than 18 months prior to the date and time when you call the API. Note: Changes in inboundWorkingQuantity, inboundShippedQuantity and inboundReceivingQuantity are not detected.
     * @param {Array<string>} [sellerSkus] A list of seller SKUs for which to return inventory summaries. You may specify up to 50 SKUs.
     * @param {string} [sellerSku] A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @param {string} [nextToken] String token returned in the response of your previous request. The string token will expire 30 seconds after being created.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInventorySummaries: (granularityType: "Marketplace", granularityId: string, marketplaceIds: Array<string>, details?: boolean, startDateTime?: string, sellerSkus?: Array<string>, sellerSku?: string, nextToken?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * FbaInventoryApi - functional programming interface
 * @export
 */
export declare const FbaInventoryApiFp: (configuration?: Configuration) => {
    /**
     * Requests that Amazon add items to the Sandbox Inventory with desired amount of quantity in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {string} xAmznIdempotencyToken A unique token/requestId provided with each call to ensure idempotency.
     * @param {AddInventoryRequest} addInventoryRequestBody List of items to add to Sandbox inventory.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addInventory(xAmznIdempotencyToken: string, addInventoryRequestBody: AddInventoryRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddInventoryResponse>>;
    /**
     * Requests that Amazon create product-details in the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {CreateInventoryItemRequest} createInventoryItemRequestBody CreateInventoryItem Request Body Parameter.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInventoryItem(createInventoryItemRequestBody: CreateInventoryItemRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateInventoryItemResponse>>;
    /**
     * Requests that Amazon Deletes an item from the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {string} sellerSku A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @param {string} marketplaceId The marketplace ID for the marketplace for which the sellerSku is to be deleted.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInventoryItem(sellerSku: string, marketplaceId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteInventoryItemResponse>>;
    /**
     * Returns a list of inventory summaries. The summaries returned depend on the presence or absence of the startDateTime, sellerSkus and sellerSku parameters:  - All inventory summaries with available details are returned when the startDateTime, sellerSkus and sellerSku parameters are omitted. - When startDateTime is provided, the operation returns inventory summaries that have had changes after the date and time specified. The sellerSkus and sellerSku parameters are ignored. Important: To avoid errors, use both startDateTime and nextToken to get the next page of inventory summaries that have changed after the date and time specified. - When the sellerSkus parameter is provided, the operation returns inventory summaries for only the specified sellerSkus. The sellerSku parameter is ignored. - When the sellerSku parameter is provided, the operation returns inventory summaries for only the specified sellerSku.  Note: The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to URL Encoding.  Usage Plan:  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see Usage Plans and Rate Limits in the Selling Partner API.
     * @param {'Marketplace'} granularityType The granularity type for the inventory aggregation level.
     * @param {string} granularityId The granularity ID for the inventory aggregation level.
     * @param {Array<string>} marketplaceIds The marketplace ID for the marketplace for which to return inventory summaries.
     * @param {boolean} [details] true to return inventory summaries with additional summarized inventory details and quantities. Otherwise, returns inventory summaries only (default value).
     * @param {string} [startDateTime] A start date and time in ISO8601 format. If specified, all inventory summaries that have changed since then are returned. You must specify a date and time that is no earlier than 18 months prior to the date and time when you call the API. Note: Changes in inboundWorkingQuantity, inboundShippedQuantity and inboundReceivingQuantity are not detected.
     * @param {Array<string>} [sellerSkus] A list of seller SKUs for which to return inventory summaries. You may specify up to 50 SKUs.
     * @param {string} [sellerSku] A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @param {string} [nextToken] String token returned in the response of your previous request. The string token will expire 30 seconds after being created.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInventorySummaries(granularityType: "Marketplace", granularityId: string, marketplaceIds: Array<string>, details?: boolean, startDateTime?: string, sellerSkus?: Array<string>, sellerSku?: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetInventorySummariesResponse>>;
};
/**
 * FbaInventoryApi - factory interface
 * @export
 */
export declare const FbaInventoryApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Requests that Amazon add items to the Sandbox Inventory with desired amount of quantity in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {string} xAmznIdempotencyToken A unique token/requestId provided with each call to ensure idempotency.
     * @param {AddInventoryRequest} addInventoryRequestBody List of items to add to Sandbox inventory.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addInventory(xAmznIdempotencyToken: string, addInventoryRequestBody: AddInventoryRequest, options?: any): AxiosPromise<AddInventoryResponse>;
    /**
     * Requests that Amazon create product-details in the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {CreateInventoryItemRequest} createInventoryItemRequestBody CreateInventoryItem Request Body Parameter.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createInventoryItem(createInventoryItemRequestBody: CreateInventoryItemRequest, options?: any): AxiosPromise<CreateInventoryItemResponse>;
    /**
     * Requests that Amazon Deletes an item from the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {string} sellerSku A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @param {string} marketplaceId The marketplace ID for the marketplace for which the sellerSku is to be deleted.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInventoryItem(sellerSku: string, marketplaceId: string, options?: any): AxiosPromise<DeleteInventoryItemResponse>;
    /**
     * Returns a list of inventory summaries. The summaries returned depend on the presence or absence of the startDateTime, sellerSkus and sellerSku parameters:  - All inventory summaries with available details are returned when the startDateTime, sellerSkus and sellerSku parameters are omitted. - When startDateTime is provided, the operation returns inventory summaries that have had changes after the date and time specified. The sellerSkus and sellerSku parameters are ignored. Important: To avoid errors, use both startDateTime and nextToken to get the next page of inventory summaries that have changed after the date and time specified. - When the sellerSkus parameter is provided, the operation returns inventory summaries for only the specified sellerSkus. The sellerSku parameter is ignored. - When the sellerSku parameter is provided, the operation returns inventory summaries for only the specified sellerSku.  Note: The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to URL Encoding.  Usage Plan:  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see Usage Plans and Rate Limits in the Selling Partner API.
     * @param {'Marketplace'} granularityType The granularity type for the inventory aggregation level.
     * @param {string} granularityId The granularity ID for the inventory aggregation level.
     * @param {Array<string>} marketplaceIds The marketplace ID for the marketplace for which to return inventory summaries.
     * @param {boolean} [details] true to return inventory summaries with additional summarized inventory details and quantities. Otherwise, returns inventory summaries only (default value).
     * @param {string} [startDateTime] A start date and time in ISO8601 format. If specified, all inventory summaries that have changed since then are returned. You must specify a date and time that is no earlier than 18 months prior to the date and time when you call the API. Note: Changes in inboundWorkingQuantity, inboundShippedQuantity and inboundReceivingQuantity are not detected.
     * @param {Array<string>} [sellerSkus] A list of seller SKUs for which to return inventory summaries. You may specify up to 50 SKUs.
     * @param {string} [sellerSku] A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @param {string} [nextToken] String token returned in the response of your previous request. The string token will expire 30 seconds after being created.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInventorySummaries(granularityType: "Marketplace", granularityId: string, marketplaceIds: Array<string>, details?: boolean, startDateTime?: string, sellerSkus?: Array<string>, sellerSku?: string, nextToken?: string, options?: any): AxiosPromise<GetInventorySummariesResponse>;
};
/**
 * Request parameters for addInventory operation in FbaInventoryApi.
 * @export
 * @interface FbaInventoryApiAddInventoryRequest
 */
export interface FbaInventoryApiAddInventoryRequest {
    /**
     * A unique token/requestId provided with each call to ensure idempotency.
     * @type {string}
     * @memberof FbaInventoryApiAddInventory
     */
    readonly xAmznIdempotencyToken: string;
    /**
     * List of items to add to Sandbox inventory.
     * @type {AddInventoryRequest}
     * @memberof FbaInventoryApiAddInventory
     */
    readonly addInventoryRequestBody: AddInventoryRequest;
}
/**
 * Request parameters for createInventoryItem operation in FbaInventoryApi.
 * @export
 * @interface FbaInventoryApiCreateInventoryItemRequest
 */
export interface FbaInventoryApiCreateInventoryItemRequest {
    /**
     * CreateInventoryItem Request Body Parameter.
     * @type {CreateInventoryItemRequest}
     * @memberof FbaInventoryApiCreateInventoryItem
     */
    readonly createInventoryItemRequestBody: CreateInventoryItemRequest;
}
/**
 * Request parameters for deleteInventoryItem operation in FbaInventoryApi.
 * @export
 * @interface FbaInventoryApiDeleteInventoryItemRequest
 */
export interface FbaInventoryApiDeleteInventoryItemRequest {
    /**
     * A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @type {string}
     * @memberof FbaInventoryApiDeleteInventoryItem
     */
    readonly sellerSku: string;
    /**
     * The marketplace ID for the marketplace for which the sellerSku is to be deleted.
     * @type {string}
     * @memberof FbaInventoryApiDeleteInventoryItem
     */
    readonly marketplaceId: string;
}
/**
 * Request parameters for getInventorySummaries operation in FbaInventoryApi.
 * @export
 * @interface FbaInventoryApiGetInventorySummariesRequest
 */
export interface FbaInventoryApiGetInventorySummariesRequest {
    /**
     * The granularity type for the inventory aggregation level.
     * @type {'Marketplace'}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly granularityType: 'Marketplace';
    /**
     * The granularity ID for the inventory aggregation level.
     * @type {string}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly granularityId: string;
    /**
     * The marketplace ID for the marketplace for which to return inventory summaries.
     * @type {Array<string>}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly marketplaceIds: Array<string>;
    /**
     * true to return inventory summaries with additional summarized inventory details and quantities. Otherwise, returns inventory summaries only (default value).
     * @type {boolean}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly details?: boolean;
    /**
     * A start date and time in ISO8601 format. If specified, all inventory summaries that have changed since then are returned. You must specify a date and time that is no earlier than 18 months prior to the date and time when you call the API. Note: Changes in inboundWorkingQuantity, inboundShippedQuantity and inboundReceivingQuantity are not detected.
     * @type {string}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly startDateTime?: string;
    /**
     * A list of seller SKUs for which to return inventory summaries. You may specify up to 50 SKUs.
     * @type {Array<string>}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly sellerSkus?: Array<string>;
    /**
     * A single seller SKU used for querying the specified seller SKU inventory summaries.
     * @type {string}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly sellerSku?: string;
    /**
     * String token returned in the response of your previous request. The string token will expire 30 seconds after being created.
     * @type {string}
     * @memberof FbaInventoryApiGetInventorySummaries
     */
    readonly nextToken?: string;
}
/**
 * FbaInventoryApi - object-oriented interface
 * @export
 * @class FbaInventoryApi
 * @extends {BaseAPI}
 */
export declare class FbaInventoryApi extends BaseAPI {
    /**
     * Requests that Amazon add items to the Sandbox Inventory with desired amount of quantity in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {FbaInventoryApiAddInventoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInventoryApi
     */
    addInventory(requestParameters: FbaInventoryApiAddInventoryRequest, options?: any): Promise<import("axios").AxiosResponse<AddInventoryResponse, any>>;
    /**
     * Requests that Amazon create product-details in the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {FbaInventoryApiCreateInventoryItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInventoryApi
     */
    createInventoryItem(requestParameters: FbaInventoryApiCreateInventoryItemRequest, options?: any): Promise<import("axios").AxiosResponse<CreateInventoryItemResponse, any>>;
    /**
     * Requests that Amazon Deletes an item from the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
     * @param {FbaInventoryApiDeleteInventoryItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInventoryApi
     */
    deleteInventoryItem(requestParameters: FbaInventoryApiDeleteInventoryItemRequest, options?: any): Promise<import("axios").AxiosResponse<DeleteInventoryItemResponse, any>>;
    /**
     * Returns a list of inventory summaries. The summaries returned depend on the presence or absence of the startDateTime, sellerSkus and sellerSku parameters:  - All inventory summaries with available details are returned when the startDateTime, sellerSkus and sellerSku parameters are omitted. - When startDateTime is provided, the operation returns inventory summaries that have had changes after the date and time specified. The sellerSkus and sellerSku parameters are ignored. Important: To avoid errors, use both startDateTime and nextToken to get the next page of inventory summaries that have changed after the date and time specified. - When the sellerSkus parameter is provided, the operation returns inventory summaries for only the specified sellerSkus. The sellerSku parameter is ignored. - When the sellerSku parameter is provided, the operation returns inventory summaries for only the specified sellerSku.  Note: The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to URL Encoding.  Usage Plan:  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see Usage Plans and Rate Limits in the Selling Partner API.
     * @param {FbaInventoryApiGetInventorySummariesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FbaInventoryApi
     */
    getInventorySummaries(requestParameters: FbaInventoryApiGetInventorySummariesRequest, options?: any): Promise<import("axios").AxiosResponse<GetInventorySummariesResponse, any>>;
}
