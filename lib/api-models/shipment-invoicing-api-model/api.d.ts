/**
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partner’s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * The shipping address details of the shipment.
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * The name.
     * @type {string}
     * @memberof Address
     */
    Name?: string;
    /**
     * The street address.
     * @type {string}
     * @memberof Address
     */
    AddressLine1?: string;
    /**
     * Additional street address information, if required.
     * @type {string}
     * @memberof Address
     */
    AddressLine2?: string;
    /**
     * Additional street address information, if required.
     * @type {string}
     * @memberof Address
     */
    AddressLine3?: string;
    /**
     * The city.
     * @type {string}
     * @memberof Address
     */
    City?: string;
    /**
     * The county.
     * @type {string}
     * @memberof Address
     */
    County?: string;
    /**
     * The district.
     * @type {string}
     * @memberof Address
     */
    District?: string;
    /**
     * The state or region.
     * @type {string}
     * @memberof Address
     */
    StateOrRegion?: string;
    /**
     * The postal code.
     * @type {string}
     * @memberof Address
     */
    PostalCode?: string;
    /**
     * The country code.
     * @type {string}
     * @memberof Address
     */
    CountryCode?: string;
    /**
     * The phone number.
     * @type {string}
     * @memberof Address
     */
    Phone?: string;
    /**
     *
     * @type {AddressTypeEnum}
     * @memberof Address
     */
    AddressType?: AddressTypeEnum | 'Residential' | 'Commercial';
}
/**
 * The shipping address type.
 * @export
 * @enum {string}
 */
export declare enum AddressTypeEnum {
    Residential = "Residential",
    Commercial = "Commercial"
}
/**
 * Tax information about the buyer.
 * @export
 * @interface BuyerTaxInfo
 */
export interface BuyerTaxInfo {
    /**
     * The legal name of the company.
     * @type {string}
     * @memberof BuyerTaxInfo
     */
    CompanyLegalName?: string;
    /**
     * The country or region imposing the tax.
     * @type {string}
     * @memberof BuyerTaxInfo
     */
    TaxingRegion?: string;
    /**
     * The list of tax classifications.
     * @type {Array<TaxClassification>}
     * @memberof BuyerTaxInfo
     */
    TaxClassifications?: Array<TaxClassification>;
}
/**
 * The response schema for the getInvoiceStatus operation.
 * @export
 * @interface GetInvoiceStatusResponse
 */
export interface GetInvoiceStatusResponse {
    /**
     *
     * @type {ShipmentInvoiceStatusResponse}
     * @memberof GetInvoiceStatusResponse
     */
    payload?: ShipmentInvoiceStatusResponse;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetInvoiceStatusResponse
     */
    errors?: Array<Error>;
}
/**
 * The response schema for the getShipmentDetails operation.
 * @export
 * @interface GetShipmentDetailsResponse
 */
export interface GetShipmentDetailsResponse {
    /**
     *
     * @type {ShipmentDetail}
     * @memberof GetShipmentDetailsResponse
     */
    payload?: ShipmentDetail;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof GetShipmentDetailsResponse
     */
    errors?: Array<Error>;
}
/**
 * Tax information about the marketplace.
 * @export
 * @interface MarketplaceTaxInfo
 */
export interface MarketplaceTaxInfo {
    /**
     * The legal name of the company.
     * @type {string}
     * @memberof MarketplaceTaxInfo
     */
    CompanyLegalName?: string;
    /**
     * The country or region imposing the tax.
     * @type {string}
     * @memberof MarketplaceTaxInfo
     */
    TaxingRegion?: string;
    /**
     * The list of tax classifications.
     * @type {Array<TaxClassification>}
     * @memberof MarketplaceTaxInfo
     */
    TaxClassifications?: Array<TaxClassification>;
}
/**
 * An error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occurred.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * A message that describes the error condition.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
    /**
     * Additional details that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
}
/**
 * The currency type and amount.
 * @export
 * @interface Money
 */
export interface Money {
    /**
     * Three-digit currency code in ISO 4217 format.
     * @type {string}
     * @memberof Money
     */
    CurrencyCode?: string;
    /**
     * The currency amount.
     * @type {string}
     * @memberof Money
     */
    Amount?: string;
}
/**
 * The information required by a selling partner to issue a shipment invoice.
 * @export
 * @interface ShipmentDetail
 */
export interface ShipmentDetail {
    /**
     * The Amazon-defined identifier for the warehouse.
     * @type {string}
     * @memberof ShipmentDetail
     */
    WarehouseId?: string;
    /**
     * The Amazon-defined identifier for the order.
     * @type {string}
     * @memberof ShipmentDetail
     */
    AmazonOrderId?: string;
    /**
     * The Amazon-defined identifier for the shipment.
     * @type {string}
     * @memberof ShipmentDetail
     */
    AmazonShipmentId?: string;
    /**
     * The date and time when the order was created.
     * @type {string}
     * @memberof ShipmentDetail
     */
    PurchaseDate?: string;
    /**
     *
     * @type {Address}
     * @memberof ShipmentDetail
     */
    ShippingAddress?: Address;
    /**
     * The list of payment method details.
     * @type {Array<string>}
     * @memberof ShipmentDetail
     */
    PaymentMethodDetails?: Array<string>;
    /**
     * The identifier for the marketplace where the order was placed.
     * @type {string}
     * @memberof ShipmentDetail
     */
    MarketplaceId?: string;
    /**
     * The seller identifier.
     * @type {string}
     * @memberof ShipmentDetail
     */
    SellerId?: string;
    /**
     * The name of the buyer.
     * @type {string}
     * @memberof ShipmentDetail
     */
    BuyerName?: string;
    /**
     * The county of the buyer.
     * @type {string}
     * @memberof ShipmentDetail
     */
    BuyerCounty?: string;
    /**
     *
     * @type {BuyerTaxInfo}
     * @memberof ShipmentDetail
     */
    BuyerTaxInfo?: BuyerTaxInfo;
    /**
     *
     * @type {MarketplaceTaxInfo}
     * @memberof ShipmentDetail
     */
    MarketplaceTaxInfo?: MarketplaceTaxInfo;
    /**
     * The seller’s friendly name registered in the marketplace.
     * @type {string}
     * @memberof ShipmentDetail
     */
    SellerDisplayName?: string;
    /**
     * A list of shipment items.
     * @type {Array<ShipmentItem>}
     * @memberof ShipmentDetail
     */
    ShipmentItems?: Array<ShipmentItem>;
}
/**
 * The shipment invoice status.
 * @export
 * @enum {string}
 */
export declare enum ShipmentInvoiceStatus {
    Processing = "Processing",
    Accepted = "Accepted",
    Errored = "Errored",
    NotFound = "NotFound"
}
/**
 * The shipment invoice status information.
 * @export
 * @interface ShipmentInvoiceStatusInfo
 */
export interface ShipmentInvoiceStatusInfo {
    /**
     * The Amazon-defined shipment identifier.
     * @type {string}
     * @memberof ShipmentInvoiceStatusInfo
     */
    AmazonShipmentId?: string;
    /**
     *
     * @type {ShipmentInvoiceStatus}
     * @memberof ShipmentInvoiceStatusInfo
     */
    InvoiceStatus?: ShipmentInvoiceStatus | 'Processing' | 'Accepted' | 'Errored' | 'NotFound';
}
/**
 * The shipment invoice status response.
 * @export
 * @interface ShipmentInvoiceStatusResponse
 */
export interface ShipmentInvoiceStatusResponse {
    /**
     *
     * @type {ShipmentInvoiceStatusInfo}
     * @memberof ShipmentInvoiceStatusResponse
     */
    Shipments?: ShipmentInvoiceStatusInfo;
}
/**
 * The shipment item information required by a seller to issue a shipment invoice.
 * @export
 * @interface ShipmentItem
 */
export interface ShipmentItem {
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof ShipmentItem
     */
    ASIN?: string;
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof ShipmentItem
     */
    SellerSKU?: string;
    /**
     * The Amazon-defined identifier for the order item.
     * @type {string}
     * @memberof ShipmentItem
     */
    OrderItemId?: string;
    /**
     * The name of the item.
     * @type {string}
     * @memberof ShipmentItem
     */
    Title?: string;
    /**
     * The number of items ordered.
     * @type {number}
     * @memberof ShipmentItem
     */
    QuantityOrdered?: number;
    /**
     *
     * @type {Money}
     * @memberof ShipmentItem
     */
    ItemPrice?: Money;
    /**
     *
     * @type {Money}
     * @memberof ShipmentItem
     */
    ShippingPrice?: Money;
    /**
     *
     * @type {Money}
     * @memberof ShipmentItem
     */
    GiftWrapPrice?: Money;
    /**
     *
     * @type {Money}
     * @memberof ShipmentItem
     */
    ShippingDiscount?: Money;
    /**
     *
     * @type {Money}
     * @memberof ShipmentItem
     */
    PromotionDiscount?: Money;
    /**
     * The list of serial numbers.
     * @type {Array<string>}
     * @memberof ShipmentItem
     */
    SerialNumbers?: Array<string>;
}
/**
 * The request schema for the submitInvoice operation.
 * @export
 * @interface SubmitInvoiceRequest
 */
export interface SubmitInvoiceRequest {
    /**
     * Shipment invoice document content.
     * @type {string}
     * @memberof SubmitInvoiceRequest
     */
    InvoiceContent: string;
    /**
     * An Amazon marketplace identifier.
     * @type {string}
     * @memberof SubmitInvoiceRequest
     */
    MarketplaceId?: string;
    /**
     * MD5 sum for validating the invoice data. For more information about calculating this value, see [Working with Content-MD5 Checksums](https://docs.developer.amazonservices.com/en_US/dev_guide/DG_MD5.html).
     * @type {string}
     * @memberof SubmitInvoiceRequest
     */
    ContentMD5Value: string;
}
/**
 * The response schema for the submitInvoice operation.
 * @export
 * @interface SubmitInvoiceResponse
 */
export interface SubmitInvoiceResponse {
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof SubmitInvoiceResponse
     */
    errors?: Array<Error>;
}
/**
 * The tax classification for the entity.
 * @export
 * @interface TaxClassification
 */
export interface TaxClassification {
    /**
     * The type of tax.
     * @type {string}
     * @memberof TaxClassification
     */
    Name?: string;
    /**
     * The entity\'s tax identifier.
     * @type {string}
     * @memberof TaxClassification
     */
    Value?: string;
}
/**
 * ShipmentInvoiceApi - axios parameter creator
 * @export
 */
export declare const ShipmentInvoiceApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The shipment identifier for the shipment.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInvoiceStatus: (shipmentId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentDetails: (shipmentId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The identifier for the shipment.
     * @param {SubmitInvoiceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitInvoice: (shipmentId: string, body: SubmitInvoiceRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ShipmentInvoiceApi - functional programming interface
 * @export
 */
export declare const ShipmentInvoiceApiFp: (configuration?: Configuration) => {
    /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The shipment identifier for the shipment.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInvoiceStatus(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetInvoiceStatusResponse>>;
    /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentDetails(shipmentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentDetailsResponse>>;
    /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The identifier for the shipment.
     * @param {SubmitInvoiceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitInvoice(shipmentId: string, body: SubmitInvoiceRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubmitInvoiceResponse>>;
};
/**
 * ShipmentInvoiceApi - factory interface
 * @export
 */
export declare const ShipmentInvoiceApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The shipment identifier for the shipment.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInvoiceStatus(shipmentId: string, options?: any): AxiosPromise<GetInvoiceStatusResponse>;
    /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentDetails(shipmentId: string, options?: any): AxiosPromise<GetShipmentDetailsResponse>;
    /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} shipmentId The identifier for the shipment.
     * @param {SubmitInvoiceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitInvoice(shipmentId: string, body: SubmitInvoiceRequest, options?: any): AxiosPromise<SubmitInvoiceResponse>;
};
/**
 * Request parameters for getInvoiceStatus operation in ShipmentInvoiceApi.
 * @export
 * @interface ShipmentInvoiceApiGetInvoiceStatusRequest
 */
export interface ShipmentInvoiceApiGetInvoiceStatusRequest {
    /**
     * The shipment identifier for the shipment.
     * @type {string}
     * @memberof ShipmentInvoiceApiGetInvoiceStatus
     */
    readonly shipmentId: string;
}
/**
 * Request parameters for getShipmentDetails operation in ShipmentInvoiceApi.
 * @export
 * @interface ShipmentInvoiceApiGetShipmentDetailsRequest
 */
export interface ShipmentInvoiceApiGetShipmentDetailsRequest {
    /**
     * The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @type {string}
     * @memberof ShipmentInvoiceApiGetShipmentDetails
     */
    readonly shipmentId: string;
}
/**
 * Request parameters for submitInvoice operation in ShipmentInvoiceApi.
 * @export
 * @interface ShipmentInvoiceApiSubmitInvoiceRequest
 */
export interface ShipmentInvoiceApiSubmitInvoiceRequest {
    /**
     * The identifier for the shipment.
     * @type {string}
     * @memberof ShipmentInvoiceApiSubmitInvoice
     */
    readonly shipmentId: string;
    /**
     *
     * @type {SubmitInvoiceRequest}
     * @memberof ShipmentInvoiceApiSubmitInvoice
     */
    readonly body: SubmitInvoiceRequest;
}
/**
 * ShipmentInvoiceApi - object-oriented interface
 * @export
 * @class ShipmentInvoiceApi
 * @extends {BaseAPI}
 */
export declare class ShipmentInvoiceApi extends BaseAPI {
    /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShipmentInvoiceApiGetInvoiceStatusRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentInvoiceApi
     */
    getInvoiceStatus(requestParameters: ShipmentInvoiceApiGetInvoiceStatusRequest, options?: any): Promise<import("axios").AxiosResponse<GetInvoiceStatusResponse, any>>;
    /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShipmentInvoiceApiGetShipmentDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentInvoiceApi
     */
    getShipmentDetails(requestParameters: ShipmentInvoiceApiGetShipmentDetailsRequest, options?: any): Promise<import("axios").AxiosResponse<GetShipmentDetailsResponse, any>>;
    /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShipmentInvoiceApiSubmitInvoiceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentInvoiceApi
     */
    submitInvoice(requestParameters: ShipmentInvoiceApiSubmitInvoiceRequest, options?: any): Promise<import("axios").AxiosResponse<SubmitInvoiceResponse, any>>;
}
