/**
 * Selling Partner API for Product Type Definitions
 * The Selling Partner API for Product Type Definitions provides programmatic access to attribute and data requirements for product types in the Amazon catalog. Use this API to return the JSON Schema for a product type that you can then use with other Selling Partner APIs, such as the Selling Partner API for Listings Items, the Selling Partner API for Catalog Items, and the Selling Partner API for Feeds (for JSON-based listing feeds).  For more information, see the [Product Type Definitions API Use Case Guide](doc:product-type-api-use-case-guide).
 *
 * The version of the OpenAPI document: 2020-09-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * A list of error responses returned when a request is unsuccessful.
 * @export
 * @interface ErrorList
 */
export interface ErrorList {
    /**
     *
     * @type {Array<Error>}
     * @memberof ErrorList
     */
    errors: Array<Error>;
}
/**
 * Error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occurred.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * A message that describes the error condition.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
    /**
     * Additional details that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
}
/**
 * An Amazon product type with a definition available.
 * @export
 * @interface ProductType
 */
export interface ProductType {
    /**
     * The name of the Amazon product type.
     * @type {string}
     * @memberof ProductType
     */
    name: string;
    /**
     * The human-readable and localized description of the Amazon product type.
     * @type {string}
     * @memberof ProductType
     */
    displayName: string;
    /**
     * The Amazon marketplace identifiers for which the product type definition is available.
     * @type {Array<string>}
     * @memberof ProductType
     */
    marketplaceIds: Array<string>;
}
/**
 * A product type definition represents the attributes and data requirements for a product type in the Amazon catalog. Product type definitions are used interchangeably between the Selling Partner API for Listings Items, Selling Partner API for Catalog Items, and JSON-based listings feeds in the Selling Partner API for Feeds.
 * @export
 * @interface ProductTypeDefinition
 */
export interface ProductTypeDefinition {
    /**
     *
     * @type {SchemaLink}
     * @memberof ProductTypeDefinition
     */
    metaSchema?: SchemaLink;
    /**
     *
     * @type {SchemaLink}
     * @memberof ProductTypeDefinition
     */
    schema: SchemaLink;
    /**
     * Name of the requirements set represented in this product type definition.
     * @type {string}
     * @memberof ProductTypeDefinition
     */
    requirements: ProductTypeDefinitionRequirementsEnum | 'LISTING' | 'LISTING_PRODUCT_ONLY' | 'LISTING_OFFER_ONLY';
    /**
     * Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all of the required attributes being present (such as for partial updates).
     * @type {string}
     * @memberof ProductTypeDefinition
     */
    requirementsEnforced: ProductTypeDefinitionRequirementsEnforcedEnum | 'ENFORCED' | 'NOT_ENFORCED';
    /**
     * Mapping of property group names to property groups. Property groups represent logical groupings of schema properties that can be used for display or informational purposes.
     * @type {{ [key: string]: PropertyGroup; }}
     * @memberof ProductTypeDefinition
     */
    propertyGroups: {
        [key: string]: PropertyGroup;
    };
    /**
     * Locale of the display elements contained in the product type definition.
     * @type {string}
     * @memberof ProductTypeDefinition
     */
    locale: string;
    /**
     * Amazon marketplace identifiers for which the product type definition is applicable.
     * @type {Array<string>}
     * @memberof ProductTypeDefinition
     */
    marketplaceIds: Array<string>;
    /**
     * The name of the Amazon product type that this product type definition applies to.
     * @type {string}
     * @memberof ProductTypeDefinition
     */
    productType: string;
    /**
     * Human-readable and localized description of the Amazon product type.
     * @type {string}
     * @memberof ProductTypeDefinition
     */
    displayName: string;
    /**
     *
     * @type {ProductTypeVersion}
     * @memberof ProductTypeDefinition
     */
    productTypeVersion: ProductTypeVersion;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ProductTypeDefinitionRequirementsEnum {
    Listing = "LISTING",
    ListingProductOnly = "LISTING_PRODUCT_ONLY",
    ListingOfferOnly = "LISTING_OFFER_ONLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ProductTypeDefinitionRequirementsEnforcedEnum {
    Enforced = "ENFORCED",
    NotEnforced = "NOT_ENFORCED"
}
/**
 * A list of Amazon product types with definitions available.
 * @export
 * @interface ProductTypeList
 */
export interface ProductTypeList {
    /**
     *
     * @type {Array<ProductType>}
     * @memberof ProductTypeList
     */
    productTypes: Array<ProductType>;
    /**
     * Amazon product type version identifier.
     * @type {string}
     * @memberof ProductTypeList
     */
    productTypeVersion: string;
}
/**
 * The version details for an Amazon product type.
 * @export
 * @interface ProductTypeVersion
 */
export interface ProductTypeVersion {
    /**
     * Version identifier.
     * @type {string}
     * @memberof ProductTypeVersion
     */
    version: string;
    /**
     * When true, the version indicated by the version identifier is the latest available for the Amazon product type.
     * @type {boolean}
     * @memberof ProductTypeVersion
     */
    latest: boolean;
    /**
     * When true, the version indicated by the version identifier is the prerelease (release candidate) for the Amazon product type.
     * @type {boolean}
     * @memberof ProductTypeVersion
     */
    releaseCandidate?: boolean;
}
/**
 * A property group represents a logical grouping of schema properties that can be used for display or informational purposes.
 * @export
 * @interface PropertyGroup
 */
export interface PropertyGroup {
    /**
     * The display label of the property group.
     * @type {string}
     * @memberof PropertyGroup
     */
    title?: string;
    /**
     * The description of the property group.
     * @type {string}
     * @memberof PropertyGroup
     */
    description?: string;
    /**
     * The names of the schema properties for the property group.
     * @type {Array<string>}
     * @memberof PropertyGroup
     */
    propertyNames?: Array<string>;
}
/**
 *
 * @export
 * @interface SchemaLink
 */
export interface SchemaLink {
    /**
     *
     * @type {SchemaLinkLink}
     * @memberof SchemaLink
     */
    link: SchemaLinkLink;
    /**
     * Checksum hash of the schema (Base64 MD5). Can be used to verify schema contents, identify changes between schema versions, and for caching.
     * @type {string}
     * @memberof SchemaLink
     */
    checksum: string;
}
/**
 * Link to retrieve the schema.
 * @export
 * @interface SchemaLinkLink
 */
export interface SchemaLinkLink {
    /**
     * URI resource for the link.
     * @type {string}
     * @memberof SchemaLinkLink
     */
    resource: string;
    /**
     * HTTP method for the link operation.
     * @type {string}
     * @memberof SchemaLinkLink
     */
    verb: SchemaLinkLinkVerbEnum | 'GET';
}
/**
    * @export
    * @enum {string}
    */
export declare enum SchemaLinkLinkVerbEnum {
    Get = "GET"
}
/**
 * DefinitionsApi - axios parameter creator
 * @export
 */
export declare const DefinitionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieve an Amazon product type definition.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} productType The Amazon product type name.
     * @param {Array<string>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers for the request. Note: This parameter is limited to one marketplaceId at this time.
     * @param {string} [sellerId] A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner.
     * @param {string} [productTypeVersion] The version of the Amazon product type to retrieve. Defaults to \&quot;LATEST\&quot;,. Prerelease versions of product type definitions may be retrieved with \&quot;RELEASE_CANDIDATE\&quot;. If no prerelease version is currently available, the \&quot;LATEST\&quot; live version will be provided.
     * @param {'LISTING' | 'LISTING_PRODUCT_ONLY' | 'LISTING_OFFER_ONLY'} [requirements] The name of the requirements set to retrieve requirements for.
     * @param {'ENFORCED' | 'NOT_ENFORCED'} [requirementsEnforced] Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates).
     * @param {'DEFAULT' | 'ar' | 'ar_AE' | 'de' | 'de_DE' | 'en' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es' | 'es_ES' | 'es_MX' | 'es_US' | 'fr' | 'fr_CA' | 'fr_FR' | 'it' | 'it_IT' | 'ja' | 'ja_JP' | 'nl' | 'nl_NL' | 'pl' | 'pl_PL' | 'pt' | 'pt_BR' | 'pt_PT' | 'sv' | 'sv_SE' | 'tr' | 'tr_TR' | 'zh' | 'zh_CN' | 'zh_TW'} [locale] Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDefinitionsProductType: (productType: string, marketplaceIds: Array<string>, sellerId?: string, productTypeVersion?: string, requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY", requirementsEnforced?: "ENFORCED" | "NOT_ENFORCED", locale?: "DEFAULT" | "ar" | "ar_AE" | "de" | "de_DE" | "en" | "en_AE" | "en_AU" | "en_CA" | "en_GB" | "en_IN" | "en_SG" | "en_US" | "es" | "es_ES" | "es_MX" | "es_US" | "fr" | "fr_CA" | "fr_FR" | "it" | "it_IT" | "ja" | "ja_JP" | "nl" | "nl_NL" | "pl" | "pl_PL" | "pt" | "pt_BR" | "pt_PT" | "sv" | "sv_SE" | "tr" | "tr_TR" | "zh" | "zh_CN" | "zh_TW", options?: any) => Promise<RequestArgs>;
    /**
     * Search for and return a list of Amazon product types that have definitions available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array<string>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers for the request.
     * @param {Array<string>} [keywords] A comma-delimited list of keywords to search product types. **Note:** Cannot be used with &#x60;itemName&#x60;.
     * @param {string} [itemName] The title of the ASIN to get the product type recommendation. **Note:** Cannot be used with &#x60;keywords&#x60;.
     * @param {string} [locale] The locale for the display names in the response. Defaults to the primary locale of the marketplace.
     * @param {string} [searchLocale] The locale used for the &#x60;keywords&#x60; and &#x60;itemName&#x60; parameters. Defaults to the primary locale of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchDefinitionsProductTypes: (marketplaceIds: Array<string>, keywords?: Array<string>, itemName?: string, locale?: string, searchLocale?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * DefinitionsApi - functional programming interface
 * @export
 */
export declare const DefinitionsApiFp: (configuration?: Configuration) => {
    /**
     * Retrieve an Amazon product type definition.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} productType The Amazon product type name.
     * @param {Array<string>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers for the request. Note: This parameter is limited to one marketplaceId at this time.
     * @param {string} [sellerId] A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner.
     * @param {string} [productTypeVersion] The version of the Amazon product type to retrieve. Defaults to \&quot;LATEST\&quot;,. Prerelease versions of product type definitions may be retrieved with \&quot;RELEASE_CANDIDATE\&quot;. If no prerelease version is currently available, the \&quot;LATEST\&quot; live version will be provided.
     * @param {'LISTING' | 'LISTING_PRODUCT_ONLY' | 'LISTING_OFFER_ONLY'} [requirements] The name of the requirements set to retrieve requirements for.
     * @param {'ENFORCED' | 'NOT_ENFORCED'} [requirementsEnforced] Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates).
     * @param {'DEFAULT' | 'ar' | 'ar_AE' | 'de' | 'de_DE' | 'en' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es' | 'es_ES' | 'es_MX' | 'es_US' | 'fr' | 'fr_CA' | 'fr_FR' | 'it' | 'it_IT' | 'ja' | 'ja_JP' | 'nl' | 'nl_NL' | 'pl' | 'pl_PL' | 'pt' | 'pt_BR' | 'pt_PT' | 'sv' | 'sv_SE' | 'tr' | 'tr_TR' | 'zh' | 'zh_CN' | 'zh_TW'} [locale] Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDefinitionsProductType(productType: string, marketplaceIds: Array<string>, sellerId?: string, productTypeVersion?: string, requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY", requirementsEnforced?: "ENFORCED" | "NOT_ENFORCED", locale?: "DEFAULT" | "ar" | "ar_AE" | "de" | "de_DE" | "en" | "en_AE" | "en_AU" | "en_CA" | "en_GB" | "en_IN" | "en_SG" | "en_US" | "es" | "es_ES" | "es_MX" | "es_US" | "fr" | "fr_CA" | "fr_FR" | "it" | "it_IT" | "ja" | "ja_JP" | "nl" | "nl_NL" | "pl" | "pl_PL" | "pt" | "pt_BR" | "pt_PT" | "sv" | "sv_SE" | "tr" | "tr_TR" | "zh" | "zh_CN" | "zh_TW", options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProductTypeDefinition>>;
    /**
     * Search for and return a list of Amazon product types that have definitions available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array<string>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers for the request.
     * @param {Array<string>} [keywords] A comma-delimited list of keywords to search product types. **Note:** Cannot be used with &#x60;itemName&#x60;.
     * @param {string} [itemName] The title of the ASIN to get the product type recommendation. **Note:** Cannot be used with &#x60;keywords&#x60;.
     * @param {string} [locale] The locale for the display names in the response. Defaults to the primary locale of the marketplace.
     * @param {string} [searchLocale] The locale used for the &#x60;keywords&#x60; and &#x60;itemName&#x60; parameters. Defaults to the primary locale of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchDefinitionsProductTypes(marketplaceIds: Array<string>, keywords?: Array<string>, itemName?: string, locale?: string, searchLocale?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProductTypeList>>;
};
/**
 * DefinitionsApi - factory interface
 * @export
 */
export declare const DefinitionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieve an Amazon product type definition.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {string} productType The Amazon product type name.
     * @param {Array<string>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers for the request. Note: This parameter is limited to one marketplaceId at this time.
     * @param {string} [sellerId] A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner.
     * @param {string} [productTypeVersion] The version of the Amazon product type to retrieve. Defaults to \&quot;LATEST\&quot;,. Prerelease versions of product type definitions may be retrieved with \&quot;RELEASE_CANDIDATE\&quot;. If no prerelease version is currently available, the \&quot;LATEST\&quot; live version will be provided.
     * @param {'LISTING' | 'LISTING_PRODUCT_ONLY' | 'LISTING_OFFER_ONLY'} [requirements] The name of the requirements set to retrieve requirements for.
     * @param {'ENFORCED' | 'NOT_ENFORCED'} [requirementsEnforced] Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates).
     * @param {'DEFAULT' | 'ar' | 'ar_AE' | 'de' | 'de_DE' | 'en' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es' | 'es_ES' | 'es_MX' | 'es_US' | 'fr' | 'fr_CA' | 'fr_FR' | 'it' | 'it_IT' | 'ja' | 'ja_JP' | 'nl' | 'nl_NL' | 'pl' | 'pl_PL' | 'pt' | 'pt_BR' | 'pt_PT' | 'sv' | 'sv_SE' | 'tr' | 'tr_TR' | 'zh' | 'zh_CN' | 'zh_TW'} [locale] Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDefinitionsProductType(productType: string, marketplaceIds: Array<string>, sellerId?: string, productTypeVersion?: string, requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY", requirementsEnforced?: "ENFORCED" | "NOT_ENFORCED", locale?: "DEFAULT" | "ar" | "ar_AE" | "de" | "de_DE" | "en" | "en_AE" | "en_AU" | "en_CA" | "en_GB" | "en_IN" | "en_SG" | "en_US" | "es" | "es_ES" | "es_MX" | "es_US" | "fr" | "fr_CA" | "fr_FR" | "it" | "it_IT" | "ja" | "ja_JP" | "nl" | "nl_NL" | "pl" | "pl_PL" | "pt" | "pt_BR" | "pt_PT" | "sv" | "sv_SE" | "tr" | "tr_TR" | "zh" | "zh_CN" | "zh_TW", options?: any): AxiosPromise<ProductTypeDefinition>;
    /**
     * Search for and return a list of Amazon product types that have definitions available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array<string>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers for the request.
     * @param {Array<string>} [keywords] A comma-delimited list of keywords to search product types. **Note:** Cannot be used with &#x60;itemName&#x60;.
     * @param {string} [itemName] The title of the ASIN to get the product type recommendation. **Note:** Cannot be used with &#x60;keywords&#x60;.
     * @param {string} [locale] The locale for the display names in the response. Defaults to the primary locale of the marketplace.
     * @param {string} [searchLocale] The locale used for the &#x60;keywords&#x60; and &#x60;itemName&#x60; parameters. Defaults to the primary locale of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchDefinitionsProductTypes(marketplaceIds: Array<string>, keywords?: Array<string>, itemName?: string, locale?: string, searchLocale?: string, options?: any): AxiosPromise<ProductTypeList>;
};
/**
 * Request parameters for getDefinitionsProductType operation in DefinitionsApi.
 * @export
 * @interface DefinitionsApiGetDefinitionsProductTypeRequest
 */
export interface DefinitionsApiGetDefinitionsProductTypeRequest {
    /**
     * The Amazon product type name.
     * @type {string}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly productType: string;
    /**
     * A comma-delimited list of Amazon marketplace identifiers for the request. Note: This parameter is limited to one marketplaceId at this time.
     * @type {Array<string>}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly marketplaceIds: Array<string>;
    /**
     * A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner.
     * @type {string}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly sellerId?: string;
    /**
     * The version of the Amazon product type to retrieve. Defaults to \&quot;LATEST\&quot;,. Prerelease versions of product type definitions may be retrieved with \&quot;RELEASE_CANDIDATE\&quot;. If no prerelease version is currently available, the \&quot;LATEST\&quot; live version will be provided.
     * @type {string}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly productTypeVersion?: string;
    /**
     * The name of the requirements set to retrieve requirements for.
     * @type {'LISTING' | 'LISTING_PRODUCT_ONLY' | 'LISTING_OFFER_ONLY'}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly requirements?: 'LISTING' | 'LISTING_PRODUCT_ONLY' | 'LISTING_OFFER_ONLY';
    /**
     * Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates).
     * @type {'ENFORCED' | 'NOT_ENFORCED'}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly requirementsEnforced?: 'ENFORCED' | 'NOT_ENFORCED';
    /**
     * Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request.
     * @type {'DEFAULT' | 'ar' | 'ar_AE' | 'de' | 'de_DE' | 'en' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es' | 'es_ES' | 'es_MX' | 'es_US' | 'fr' | 'fr_CA' | 'fr_FR' | 'it' | 'it_IT' | 'ja' | 'ja_JP' | 'nl' | 'nl_NL' | 'pl' | 'pl_PL' | 'pt' | 'pt_BR' | 'pt_PT' | 'sv' | 'sv_SE' | 'tr' | 'tr_TR' | 'zh' | 'zh_CN' | 'zh_TW'}
     * @memberof DefinitionsApiGetDefinitionsProductType
     */
    readonly locale?: 'DEFAULT' | 'ar' | 'ar_AE' | 'de' | 'de_DE' | 'en' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es' | 'es_ES' | 'es_MX' | 'es_US' | 'fr' | 'fr_CA' | 'fr_FR' | 'it' | 'it_IT' | 'ja' | 'ja_JP' | 'nl' | 'nl_NL' | 'pl' | 'pl_PL' | 'pt' | 'pt_BR' | 'pt_PT' | 'sv' | 'sv_SE' | 'tr' | 'tr_TR' | 'zh' | 'zh_CN' | 'zh_TW';
}
/**
 * Request parameters for searchDefinitionsProductTypes operation in DefinitionsApi.
 * @export
 * @interface DefinitionsApiSearchDefinitionsProductTypesRequest
 */
export interface DefinitionsApiSearchDefinitionsProductTypesRequest {
    /**
     * A comma-delimited list of Amazon marketplace identifiers for the request.
     * @type {Array<string>}
     * @memberof DefinitionsApiSearchDefinitionsProductTypes
     */
    readonly marketplaceIds: Array<string>;
    /**
     * A comma-delimited list of keywords to search product types. **Note:** Cannot be used with &#x60;itemName&#x60;.
     * @type {Array<string>}
     * @memberof DefinitionsApiSearchDefinitionsProductTypes
     */
    readonly keywords?: Array<string>;
    /**
     * The title of the ASIN to get the product type recommendation. **Note:** Cannot be used with &#x60;keywords&#x60;.
     * @type {string}
     * @memberof DefinitionsApiSearchDefinitionsProductTypes
     */
    readonly itemName?: string;
    /**
     * The locale for the display names in the response. Defaults to the primary locale of the marketplace.
     * @type {string}
     * @memberof DefinitionsApiSearchDefinitionsProductTypes
     */
    readonly locale?: string;
    /**
     * The locale used for the &#x60;keywords&#x60; and &#x60;itemName&#x60; parameters. Defaults to the primary locale of the marketplace.
     * @type {string}
     * @memberof DefinitionsApiSearchDefinitionsProductTypes
     */
    readonly searchLocale?: string;
}
/**
 * DefinitionsApi - object-oriented interface
 * @export
 * @class DefinitionsApi
 * @extends {BaseAPI}
 */
export declare class DefinitionsApi extends BaseAPI {
    /**
     * Retrieve an Amazon product type definition.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {DefinitionsApiGetDefinitionsProductTypeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefinitionsApi
     */
    getDefinitionsProductType(requestParameters: DefinitionsApiGetDefinitionsProductTypeRequest, options?: any): Promise<import("axios").AxiosResponse<ProductTypeDefinition, any>>;
    /**
     * Search for and return a list of Amazon product types that have definitions available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {DefinitionsApiSearchDefinitionsProductTypesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefinitionsApi
     */
    searchDefinitionsProductTypes(requestParameters: DefinitionsApiSearchDefinitionsProductTypesRequest, options?: any): Promise<import("axios").AxiosResponse<ProductTypeList, any>>;
}
